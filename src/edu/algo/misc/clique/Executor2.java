package edu.algo.misc.clique;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.jgrapht.*;
import org.jgrapht.graph.*;

public class Executor2 {
	DirectedGraph<String, DefaultEdge> graph1, graph2;
	Map<String, Set<String>> solMap;
	Set<String> optSol;
	Integer cnt;
	
	public Executor2(){
		this.graph1 = createStringGraph2();
		this.graph2 = createStringGraph2();
		
		optSol = new HashSet<>();
		solMap = new HashMap<>();
		cnt = 0;
	}
	public void findClique(String r, Collection<String> parents){
		// Build current solution
		Set<String> curr = new HashSet<>(parents);
		// Get children to expand
		Set<String> children = getChildren(graph1, r);
		// parents intersection r.children
		curr.retainAll(children);					// O(n*log(n))		
		// add current node to the frontier
		curr.add(r);								// O(log(n))
		
		// Get intermediate solution
		Set<String> prev = solMap.get(r);			// O(log(n))
		// Merge both solutions
		if(prev!=null){
			Set<String> common = new HashSet<>(curr);
			common.retainAll(prev);					// O(n*log(n))
			
			curr.removeAll(common);					// O(n*log(n))
			prev.removeAll(common);					// O(n*log(n))
			
			Set<String> big, sml;
			if(curr.size() > prev.size()){ big = curr; sml = prev; }
			else                         { big = prev; sml = curr; }

			for(String c:sml){						// O(n^2 log(n))
				cnt++;
				Set<String> cc = getChildren(graph1, c);
				cc.retainAll(big);					// O(n*log(n))
				if(cc.size() == big.size())
					common.add(c);					// O(n*log(n))
			}
			common.addAll(big);						// O(n*log(n))
			prev = common;
		}else{
			prev = curr;
		}
		// Put solution back to storage
		solMap.put(r, prev);						// O(log(n))
		
		if(optSol.size()<prev.size())
			optSol = prev;
		System.out.print("\tcurr=");printSet(prev);
		
		do{
			children = getChildren(graph2, r);
			if(!children.iterator().hasNext()) break;
			
			String c = children.iterator().next();
			graph2.removeEdge(r, c); graph2.removeEdge(c, r);
			
			System.out.print((++cnt)+"\tNode: "+r+"->"+c);
			
			findClique(c, prev);
		}while(true);
	}
	
	
	
	public static void main(String[] args) {
		// Initialize
		Executor2 e = new Executor2();
		Set<String> parents = new HashSet<>();
		String r = e.graph1.vertexSet().iterator().next();
		
		// Execute clique search
		e.findClique(r, parents);
		
		// Print results
		System.out.print("\n\n"+e.optSol.size()+"\t");
		printSet(e.optSol);
	}
	
	private static void printSet(Set<String> optSol){
		List<Integer> sol = new ArrayList<Integer>(optSol.size());
		for(String s: optSol){
			sol.add(Integer.parseInt(s));
		}
		Collections.sort(sol);
		System.out.println(sol);
	}
	
	private Set<String> getChildren(Graph<String, DefaultEdge> graph, String r){
		Set<String> result = new HashSet<>();
		for(DefaultEdge e: graph.edgesOf(r)){
			result.add(graph.getEdgeTarget(e));
			result.add(graph.getEdgeSource(e));
		};
		result.remove(r);
		return result;
	}
	
	/**
     * Create a toy graph based on String objects.
     *
     * @return a graph based on String objects.
     */
    private static UndirectedGraph<String, DefaultEdge> createStringGraph(){
        UndirectedGraph<String, DefaultEdge> g = new SimpleGraph<>(DefaultEdge.class);

        String v1 = "v1";
        String v2 = "v2";
        String v3 = "v3";
        String v4 = "v4";
        String v5 = "v5";
        String v6 = "v6";
        String v7 = "v7";

        // add the vertices
        g.addVertex(v1);
        g.addVertex(v2);
        g.addVertex(v3);
        g.addVertex(v4);
        g.addVertex(v5);
        g.addVertex(v6);
        g.addVertex(v7);

        // add edges to create a circuit
        g.addEdge(v1, v2);
        g.addEdge(v1, v3);
        g.addEdge(v1, v4);
        g.addEdge(v1, v6);
        
        g.addEdge(v2, v3);
        g.addEdge(v2, v5);
        g.addEdge(v2, v7);

        g.addEdge(v3, v4);
        g.addEdge(v3, v5);
        
        g.addEdge(v4, v5);
        g.addEdge(v4, v6);
        g.addEdge(v4, v7);
        
        g.addEdge(v5, v6);
        g.addEdge(v5, v7);

        g.addEdge(v6, v7);
        

        //g.addEdge(v1, v7);
        //g.addEdge(v1, v5);
        
        return g;
    }
    
    /**
     * Create a toy graph based on String objects.
     *
     * @return a graph based on String objects.
     */
    private static DirectedGraph<String, DefaultEdge> createStringGraph2(){
    	DirectedGraph<String, DefaultEdge> g = new DefaultDirectedGraph<>(DefaultEdge.class);

    	g.addVertex("1");
    	g.addVertex("2");
    	g.addVertex("3");
    	g.addVertex("4");
    	g.addVertex("5");
    	g.addVertex("6");
    	g.addVertex("7");
    	g.addVertex("8");
    	g.addVertex("9");
    	g.addVertex("10");
    	g.addVertex("11");
    	g.addVertex("12");
    	g.addVertex("13");
    	g.addVertex("14");
    	g.addVertex("15");
    	g.addVertex("16");
    	g.addVertex("17");
    	g.addVertex("18");
    	g.addVertex("19");
    	g.addVertex("20");
    	g.addVertex("21");
    	g.addVertex("22");
    	g.addVertex("23");
    	g.addVertex("24");
    	g.addVertex("25");
    	g.addVertex("26");
    	g.addVertex("27");
    	g.addVertex("28");
    	g.addVertex("29");
    	g.addVertex("30");
    	g.addVertex("31");
    	g.addVertex("32");
    	g.addVertex("33");
    	g.addVertex("34");
    	g.addVertex("35");
    	g.addVertex("36");
    	g.addVertex("37");
    	g.addVertex("38");
    	g.addVertex("39");
    	g.addVertex("40");
    	g.addVertex("41");
    	g.addVertex("42");
    	g.addVertex("43");
    	g.addVertex("44");
    	g.addVertex("45");
    	g.addVertex("46");
    	g.addVertex("47");
    	g.addVertex("48");
    	g.addVertex("49");
    	g.addVertex("50");
    	g.addVertex("51");
    	g.addVertex("52");
    	g.addVertex("53");
    	g.addVertex("54");
    	g.addVertex("55");
    	g.addVertex("56");
    	g.addVertex("57");
    	g.addVertex("58");
    	g.addVertex("59");
    	g.addVertex("60");
    	g.addVertex("61");
    	g.addVertex("62");
    	g.addVertex("63");
    	g.addVertex("64");
    	g.addEdge("3", "2");g.addEdge("2", "3");
    	//g.addEdge("4", "1");g.addEdge("1", "4");
    	g.addEdge("5", "2");g.addEdge("2", "5");
    	g.addEdge("5", "3");g.addEdge("3", "5");
    	g.addEdge("5", "4");g.addEdge("4", "5");
    	g.addEdge("6", "1");g.addEdge("1", "6");
    	g.addEdge("6", "3");g.addEdge("3", "6");
    	g.addEdge("6", "4");g.addEdge("4", "6");
    	g.addEdge("7", "1");g.addEdge("1", "7");
    	g.addEdge("7", "2");g.addEdge("2", "7");
    	g.addEdge("7", "4");g.addEdge("4", "7");
    	g.addEdge("7", "6");g.addEdge("6", "7");
    	g.addEdge("8", "1");g.addEdge("1", "8");
    	g.addEdge("8", "2");g.addEdge("2", "8");
    	g.addEdge("8", "3");g.addEdge("3", "8");
    	g.addEdge("8", "5");g.addEdge("5", "8");
    	g.addEdge("9", "2");g.addEdge("2", "9");
    	g.addEdge("9", "3");g.addEdge("3", "9");
    	g.addEdge("9", "4");g.addEdge("4", "9");
    	g.addEdge("9", "5");g.addEdge("5", "9");
    	g.addEdge("9", "6");g.addEdge("6", "9");
    	g.addEdge("9", "7");g.addEdge("7", "9");
    	g.addEdge("9", "8");g.addEdge("8", "9");
    	g.addEdge("10", "1");g.addEdge("1", "10");
    	g.addEdge("10", "3");g.addEdge("3", "10");
    	g.addEdge("10", "4");g.addEdge("4", "10");
    	g.addEdge("10", "5");g.addEdge("5", "10");
    	g.addEdge("10", "6");g.addEdge("6", "10");
    	g.addEdge("10", "7");g.addEdge("7", "10");
    	g.addEdge("10", "8");g.addEdge("8", "10");
    	g.addEdge("11", "1");g.addEdge("1", "11");
    	g.addEdge("11", "2");g.addEdge("2", "11");
    	g.addEdge("11", "4");g.addEdge("4", "11");
    	g.addEdge("11", "5");g.addEdge("5", "11");
    	g.addEdge("11", "6");g.addEdge("6", "11");
    	g.addEdge("11", "7");g.addEdge("7", "11");
    	g.addEdge("11", "8");g.addEdge("8", "11");
    	g.addEdge("11", "10");g.addEdge("10", "11");
    	g.addEdge("12", "1");g.addEdge("1", "12");
    	g.addEdge("12", "2");g.addEdge("2", "12");
    	g.addEdge("12", "3");g.addEdge("3", "12");
    	g.addEdge("12", "5");g.addEdge("5", "12");
    	g.addEdge("12", "6");g.addEdge("6", "12");
    	g.addEdge("12", "7");g.addEdge("7", "12");
    	g.addEdge("12", "8");g.addEdge("8", "12");
    	g.addEdge("12", "9");g.addEdge("9", "12");
    	g.addEdge("13", "1");g.addEdge("1", "13");
    	g.addEdge("13", "2");g.addEdge("2", "13");
    	g.addEdge("13", "3");g.addEdge("3", "13");
    	g.addEdge("13", "4");g.addEdge("4", "13");
    	g.addEdge("13", "6");g.addEdge("6", "13");
    	g.addEdge("13", "7");g.addEdge("7", "13");
    	g.addEdge("13", "8");g.addEdge("8", "13");
    	g.addEdge("13", "10");g.addEdge("10", "13");
    	g.addEdge("13", "11");g.addEdge("11", "13");
    	g.addEdge("13", "12");g.addEdge("12", "13");
    	g.addEdge("14", "1");g.addEdge("1", "14");
    	g.addEdge("14", "2");g.addEdge("2", "14");
    	g.addEdge("14", "3");g.addEdge("3", "14");
    	g.addEdge("14", "4");g.addEdge("4", "14");
    	g.addEdge("14", "5");g.addEdge("5", "14");
    	g.addEdge("14", "7");g.addEdge("7", "14");
    	g.addEdge("14", "8");g.addEdge("8", "14");
    	g.addEdge("14", "9");g.addEdge("9", "14");
    	g.addEdge("14", "11");g.addEdge("11", "14");
    	g.addEdge("14", "12");g.addEdge("12", "14");
    	g.addEdge("15", "1");g.addEdge("1", "15");
    	g.addEdge("15", "2");g.addEdge("2", "15");
    	g.addEdge("15", "3");g.addEdge("3", "15");
    	g.addEdge("15", "4");g.addEdge("4", "15");
    	g.addEdge("15", "5");g.addEdge("5", "15");
    	g.addEdge("15", "6");g.addEdge("6", "15");
    	g.addEdge("15", "8");g.addEdge("8", "15");
    	g.addEdge("15", "9");g.addEdge("9", "15");
    	g.addEdge("15", "10");g.addEdge("10", "15");
    	g.addEdge("15", "12");g.addEdge("12", "15");
    	g.addEdge("15", "14");g.addEdge("14", "15");
    	g.addEdge("16", "1");g.addEdge("1", "16");
    	g.addEdge("16", "2");g.addEdge("2", "16");
    	g.addEdge("16", "3");g.addEdge("3", "16");
    	g.addEdge("16", "4");g.addEdge("4", "16");
    	g.addEdge("16", "5");g.addEdge("5", "16");
    	g.addEdge("16", "6");g.addEdge("6", "16");
    	g.addEdge("16", "7");g.addEdge("7", "16");
    	g.addEdge("16", "9");g.addEdge("9", "16");
    	g.addEdge("16", "10");g.addEdge("10", "16");
    	g.addEdge("16", "11");g.addEdge("11", "16");
    	g.addEdge("16", "13");g.addEdge("13", "16");
    	g.addEdge("17", "2");g.addEdge("2", "17");
    	g.addEdge("17", "3");g.addEdge("3", "17");
    	g.addEdge("17", "4");g.addEdge("4", "17");
    	g.addEdge("17", "5");g.addEdge("5", "17");
    	g.addEdge("17", "6");g.addEdge("6", "17");
    	g.addEdge("17", "7");g.addEdge("7", "17");
    	g.addEdge("17", "8");g.addEdge("8", "17");
    	g.addEdge("17", "9");g.addEdge("9", "17");
    	g.addEdge("17", "10");g.addEdge("10", "17");
    	g.addEdge("17", "11");g.addEdge("11", "17");
    	g.addEdge("17", "12");g.addEdge("12", "17");
    	g.addEdge("17", "13");g.addEdge("13", "17");
    	g.addEdge("17", "14");g.addEdge("14", "17");
    	g.addEdge("17", "15");g.addEdge("15", "17");
    	g.addEdge("17", "16");g.addEdge("16", "17");
    	g.addEdge("18", "1");g.addEdge("1", "18");
    	g.addEdge("18", "3");g.addEdge("3", "18");
    	g.addEdge("18", "4");g.addEdge("4", "18");
    	g.addEdge("18", "5");g.addEdge("5", "18");
    	g.addEdge("18", "6");g.addEdge("6", "18");
    	g.addEdge("18", "7");g.addEdge("7", "18");
    	g.addEdge("18", "8");g.addEdge("8", "18");
    	g.addEdge("18", "9");g.addEdge("9", "18");
    	g.addEdge("18", "10");g.addEdge("10", "18");
    	g.addEdge("18", "11");g.addEdge("11", "18");
    	g.addEdge("18", "12");g.addEdge("12", "18");
    	g.addEdge("18", "13");g.addEdge("13", "18");
    	g.addEdge("18", "14");g.addEdge("14", "18");
    	g.addEdge("18", "15");g.addEdge("15", "18");
    	g.addEdge("18", "16");g.addEdge("16", "18");
    	g.addEdge("19", "1");g.addEdge("1", "19");
    	g.addEdge("19", "2");g.addEdge("2", "19");
    	g.addEdge("19", "4");g.addEdge("4", "19");
    	g.addEdge("19", "5");g.addEdge("5", "19");
    	g.addEdge("19", "6");g.addEdge("6", "19");
    	g.addEdge("19", "7");g.addEdge("7", "19");
    	g.addEdge("19", "8");g.addEdge("8", "19");
    	g.addEdge("19", "9");g.addEdge("9", "19");
    	g.addEdge("19", "10");g.addEdge("10", "19");
    	g.addEdge("19", "11");g.addEdge("11", "19");
    	g.addEdge("19", "12");g.addEdge("12", "19");
    	g.addEdge("19", "13");g.addEdge("13", "19");
    	g.addEdge("19", "14");g.addEdge("14", "19");
    	g.addEdge("19", "15");g.addEdge("15", "19");
    	g.addEdge("19", "16");g.addEdge("16", "19");
    	g.addEdge("19", "18");g.addEdge("18", "19");
    	g.addEdge("20", "1");g.addEdge("1", "20");
    	g.addEdge("20", "2");g.addEdge("2", "20");
    	g.addEdge("20", "3");g.addEdge("3", "20");
    	g.addEdge("20", "5");g.addEdge("5", "20");
    	g.addEdge("20", "6");g.addEdge("6", "20");
    	g.addEdge("20", "7");g.addEdge("7", "20");
    	g.addEdge("20", "8");g.addEdge("8", "20");
    	g.addEdge("20", "9");g.addEdge("9", "20");
    	g.addEdge("20", "10");g.addEdge("10", "20");
    	g.addEdge("20", "11");g.addEdge("11", "20");
    	g.addEdge("20", "12");g.addEdge("12", "20");
    	g.addEdge("20", "13");g.addEdge("13", "20");
    	g.addEdge("20", "14");g.addEdge("14", "20");
    	g.addEdge("20", "15");g.addEdge("15", "20");
    	g.addEdge("20", "16");g.addEdge("16", "20");
    	g.addEdge("20", "17");g.addEdge("17", "20");
    	g.addEdge("21", "1");g.addEdge("1", "21");
    	g.addEdge("21", "2");g.addEdge("2", "21");
    	g.addEdge("21", "3");g.addEdge("3", "21");
    	g.addEdge("21", "4");g.addEdge("4", "21");
    	g.addEdge("21", "6");g.addEdge("6", "21");
    	g.addEdge("21", "7");g.addEdge("7", "21");
    	g.addEdge("21", "8");g.addEdge("8", "21");
    	g.addEdge("21", "9");g.addEdge("9", "21");
    	g.addEdge("21", "10");g.addEdge("10", "21");
    	g.addEdge("21", "11");g.addEdge("11", "21");
    	g.addEdge("21", "12");g.addEdge("12", "21");
    	g.addEdge("21", "13");g.addEdge("13", "21");
    	g.addEdge("21", "14");g.addEdge("14", "21");
    	g.addEdge("21", "15");g.addEdge("15", "21");
    	g.addEdge("21", "16");g.addEdge("16", "21");
    	g.addEdge("21", "18");g.addEdge("18", "21");
    	g.addEdge("21", "19");g.addEdge("19", "21");
    	g.addEdge("21", "20");g.addEdge("20", "21");
    	g.addEdge("22", "1");g.addEdge("1", "22");
    	g.addEdge("22", "2");g.addEdge("2", "22");
    	g.addEdge("22", "3");g.addEdge("3", "22");
    	g.addEdge("22", "4");g.addEdge("4", "22");
    	g.addEdge("22", "5");g.addEdge("5", "22");
    	g.addEdge("22", "7");g.addEdge("7", "22");
    	g.addEdge("22", "8");g.addEdge("8", "22");
    	g.addEdge("22", "9");g.addEdge("9", "22");
    	g.addEdge("22", "10");g.addEdge("10", "22");
    	g.addEdge("22", "11");g.addEdge("11", "22");
    	g.addEdge("22", "12");g.addEdge("12", "22");
    	g.addEdge("22", "13");g.addEdge("13", "22");
    	g.addEdge("22", "14");g.addEdge("14", "22");
    	g.addEdge("22", "15");g.addEdge("15", "22");
    	g.addEdge("22", "16");g.addEdge("16", "22");
    	g.addEdge("22", "17");g.addEdge("17", "22");
    	g.addEdge("22", "19");g.addEdge("19", "22");
    	g.addEdge("22", "20");g.addEdge("20", "22");
    	g.addEdge("23", "1");g.addEdge("1", "23");
    	g.addEdge("23", "2");g.addEdge("2", "23");
    	g.addEdge("23", "3");g.addEdge("3", "23");
    	g.addEdge("23", "4");g.addEdge("4", "23");
    	g.addEdge("23", "5");g.addEdge("5", "23");
    	g.addEdge("23", "6");g.addEdge("6", "23");
    	g.addEdge("23", "8");g.addEdge("8", "23");
    	g.addEdge("23", "9");g.addEdge("9", "23");
    	g.addEdge("23", "10");g.addEdge("10", "23");
    	g.addEdge("23", "11");g.addEdge("11", "23");
    	g.addEdge("23", "12");g.addEdge("12", "23");
    	g.addEdge("23", "13");g.addEdge("13", "23");
    	g.addEdge("23", "14");g.addEdge("14", "23");
    	g.addEdge("23", "15");g.addEdge("15", "23");
    	g.addEdge("23", "16");g.addEdge("16", "23");
    	g.addEdge("23", "17");g.addEdge("17", "23");
    	g.addEdge("23", "18");g.addEdge("18", "23");
    	g.addEdge("23", "20");g.addEdge("20", "23");
    	g.addEdge("23", "22");g.addEdge("22", "23");
    	g.addEdge("24", "1");g.addEdge("1", "24");
    	g.addEdge("24", "2");g.addEdge("2", "24");
    	g.addEdge("24", "3");g.addEdge("3", "24");
    	g.addEdge("24", "4");g.addEdge("4", "24");
    	g.addEdge("24", "5");g.addEdge("5", "24");
    	g.addEdge("24", "6");g.addEdge("6", "24");
    	g.addEdge("24", "7");g.addEdge("7", "24");
    	g.addEdge("24", "9");g.addEdge("9", "24");
    	g.addEdge("24", "10");g.addEdge("10", "24");
    	g.addEdge("24", "11");g.addEdge("11", "24");
    	g.addEdge("24", "12");g.addEdge("12", "24");
    	g.addEdge("24", "13");g.addEdge("13", "24");
    	g.addEdge("24", "14");g.addEdge("14", "24");
    	g.addEdge("24", "15");g.addEdge("15", "24");
    	g.addEdge("24", "16");g.addEdge("16", "24");
    	g.addEdge("24", "17");g.addEdge("17", "24");
    	g.addEdge("24", "18");g.addEdge("18", "24");
    	g.addEdge("24", "19");g.addEdge("19", "24");
    	g.addEdge("24", "21");g.addEdge("21", "24");
    	g.addEdge("25", "1");g.addEdge("1", "25");
    	g.addEdge("25", "2");g.addEdge("2", "25");
    	g.addEdge("25", "3");g.addEdge("3", "25");
    	g.addEdge("25", "4");g.addEdge("4", "25");
    	g.addEdge("25", "5");g.addEdge("5", "25");
    	g.addEdge("25", "6");g.addEdge("6", "25");
    	g.addEdge("25", "7");g.addEdge("7", "25");
    	g.addEdge("25", "8");g.addEdge("8", "25");
    	g.addEdge("25", "10");g.addEdge("10", "25");
    	g.addEdge("25", "11");g.addEdge("11", "25");
    	g.addEdge("25", "12");g.addEdge("12", "25");
    	g.addEdge("25", "13");g.addEdge("13", "25");
    	g.addEdge("25", "14");g.addEdge("14", "25");
    	g.addEdge("25", "15");g.addEdge("15", "25");
    	g.addEdge("25", "16");g.addEdge("16", "25");
    	g.addEdge("25", "18");g.addEdge("18", "25");
    	g.addEdge("25", "19");g.addEdge("19", "25");
    	g.addEdge("25", "20");g.addEdge("20", "25");
    	g.addEdge("25", "21");g.addEdge("21", "25");
    	g.addEdge("25", "22");g.addEdge("22", "25");
    	g.addEdge("25", "23");g.addEdge("23", "25");
    	g.addEdge("25", "24");g.addEdge("24", "25");
    	g.addEdge("26", "1");g.addEdge("1", "26");
    	g.addEdge("26", "2");g.addEdge("2", "26");
    	g.addEdge("26", "3");g.addEdge("3", "26");
    	g.addEdge("26", "4");g.addEdge("4", "26");
    	g.addEdge("26", "5");g.addEdge("5", "26");
    	g.addEdge("26", "6");g.addEdge("6", "26");
    	g.addEdge("26", "7");g.addEdge("7", "26");
    	g.addEdge("26", "8");g.addEdge("8", "26");
    	g.addEdge("26", "9");g.addEdge("9", "26");
    	g.addEdge("26", "11");g.addEdge("11", "26");
    	g.addEdge("26", "12");g.addEdge("12", "26");
    	g.addEdge("26", "13");g.addEdge("13", "26");
    	g.addEdge("26", "14");g.addEdge("14", "26");
    	g.addEdge("26", "15");g.addEdge("15", "26");
    	g.addEdge("26", "16");g.addEdge("16", "26");
    	g.addEdge("26", "17");g.addEdge("17", "26");
    	g.addEdge("26", "19");g.addEdge("19", "26");
    	g.addEdge("26", "20");g.addEdge("20", "26");
    	g.addEdge("26", "21");g.addEdge("21", "26");
    	g.addEdge("26", "22");g.addEdge("22", "26");
    	g.addEdge("26", "23");g.addEdge("23", "26");
    	g.addEdge("26", "24");g.addEdge("24", "26");
    	g.addEdge("27", "1");g.addEdge("1", "27");
    	g.addEdge("27", "2");g.addEdge("2", "27");
    	g.addEdge("27", "3");g.addEdge("3", "27");
    	g.addEdge("27", "4");g.addEdge("4", "27");
    	g.addEdge("27", "5");g.addEdge("5", "27");
    	g.addEdge("27", "6");g.addEdge("6", "27");
    	g.addEdge("27", "7");g.addEdge("7", "27");
    	g.addEdge("27", "8");g.addEdge("8", "27");
    	g.addEdge("27", "9");g.addEdge("9", "27");
    	g.addEdge("27", "10");g.addEdge("10", "27");
    	g.addEdge("27", "12");g.addEdge("12", "27");
    	g.addEdge("27", "13");g.addEdge("13", "27");
    	g.addEdge("27", "14");g.addEdge("14", "27");
    	g.addEdge("27", "15");g.addEdge("15", "27");
    	g.addEdge("27", "16");g.addEdge("16", "27");
    	g.addEdge("27", "17");g.addEdge("17", "27");
    	g.addEdge("27", "18");g.addEdge("18", "27");
    	g.addEdge("27", "20");g.addEdge("20", "27");
    	g.addEdge("27", "21");g.addEdge("21", "27");
    	g.addEdge("27", "22");g.addEdge("22", "27");
    	g.addEdge("27", "23");g.addEdge("23", "27");
    	g.addEdge("27", "24");g.addEdge("24", "27");
    	g.addEdge("27", "26");g.addEdge("26", "27");
    	g.addEdge("28", "1");g.addEdge("1", "28");
    	g.addEdge("28", "2");g.addEdge("2", "28");
    	g.addEdge("28", "3");g.addEdge("3", "28");
    	g.addEdge("28", "4");g.addEdge("4", "28");
    	g.addEdge("28", "5");g.addEdge("5", "28");
    	g.addEdge("28", "6");g.addEdge("6", "28");
    	g.addEdge("28", "7");g.addEdge("7", "28");
    	g.addEdge("28", "8");g.addEdge("8", "28");
    	g.addEdge("28", "9");g.addEdge("9", "28");
    	g.addEdge("28", "10");g.addEdge("10", "28");
    	g.addEdge("28", "11");g.addEdge("11", "28");
    	g.addEdge("28", "13");g.addEdge("13", "28");
    	g.addEdge("28", "14");g.addEdge("14", "28");
    	g.addEdge("28", "15");g.addEdge("15", "28");
    	g.addEdge("28", "16");g.addEdge("16", "28");
    	g.addEdge("28", "17");g.addEdge("17", "28");
    	g.addEdge("28", "18");g.addEdge("18", "28");
    	g.addEdge("28", "19");g.addEdge("19", "28");
    	g.addEdge("28", "21");g.addEdge("21", "28");
    	g.addEdge("28", "22");g.addEdge("22", "28");
    	g.addEdge("28", "23");g.addEdge("23", "28");
    	g.addEdge("28", "24");g.addEdge("24", "28");
    	g.addEdge("28", "25");g.addEdge("25", "28");
    	g.addEdge("29", "1");g.addEdge("1", "29");
    	g.addEdge("29", "2");g.addEdge("2", "29");
    	g.addEdge("29", "3");g.addEdge("3", "29");
    	g.addEdge("29", "4");g.addEdge("4", "29");
    	g.addEdge("29", "5");g.addEdge("5", "29");
    	g.addEdge("29", "6");g.addEdge("6", "29");
    	g.addEdge("29", "7");g.addEdge("7", "29");
    	g.addEdge("29", "8");g.addEdge("8", "29");
    	g.addEdge("29", "9");g.addEdge("9", "29");
    	g.addEdge("29", "10");g.addEdge("10", "29");
    	g.addEdge("29", "11");g.addEdge("11", "29");
    	g.addEdge("29", "12");g.addEdge("12", "29");
    	g.addEdge("29", "14");g.addEdge("14", "29");
    	g.addEdge("29", "15");g.addEdge("15", "29");
    	g.addEdge("29", "16");g.addEdge("16", "29");
    	g.addEdge("29", "17");g.addEdge("17", "29");
    	g.addEdge("29", "18");g.addEdge("18", "29");
    	g.addEdge("29", "19");g.addEdge("19", "29");
    	g.addEdge("29", "20");g.addEdge("20", "29");
    	g.addEdge("29", "22");g.addEdge("22", "29");
    	g.addEdge("29", "23");g.addEdge("23", "29");
    	g.addEdge("29", "24");g.addEdge("24", "29");
    	g.addEdge("29", "26");g.addEdge("26", "29");
    	g.addEdge("29", "27");g.addEdge("27", "29");
    	g.addEdge("29", "28");g.addEdge("28", "29");
    	g.addEdge("30", "1");g.addEdge("1", "30");
    	g.addEdge("30", "2");g.addEdge("2", "30");
    	g.addEdge("30", "3");g.addEdge("3", "30");
    	g.addEdge("30", "4");g.addEdge("4", "30");
    	g.addEdge("30", "5");g.addEdge("5", "30");
    	g.addEdge("30", "6");g.addEdge("6", "30");
    	g.addEdge("30", "7");g.addEdge("7", "30");
    	g.addEdge("30", "8");g.addEdge("8", "30");
    	g.addEdge("30", "9");g.addEdge("9", "30");
    	g.addEdge("30", "10");g.addEdge("10", "30");
    	g.addEdge("30", "11");g.addEdge("11", "30");
    	g.addEdge("30", "12");g.addEdge("12", "30");
    	g.addEdge("30", "13");g.addEdge("13", "30");
    	g.addEdge("30", "15");g.addEdge("15", "30");
    	g.addEdge("30", "16");g.addEdge("16", "30");
    	g.addEdge("30", "17");g.addEdge("17", "30");
    	g.addEdge("30", "18");g.addEdge("18", "30");
    	g.addEdge("30", "19");g.addEdge("19", "30");
    	g.addEdge("30", "20");g.addEdge("20", "30");
    	g.addEdge("30", "21");g.addEdge("21", "30");
    	g.addEdge("30", "23");g.addEdge("23", "30");
    	g.addEdge("30", "24");g.addEdge("24", "30");
    	g.addEdge("30", "25");g.addEdge("25", "30");
    	g.addEdge("30", "27");g.addEdge("27", "30");
    	g.addEdge("30", "28");g.addEdge("28", "30");
    	g.addEdge("31", "1");g.addEdge("1", "31");
    	g.addEdge("31", "2");g.addEdge("2", "31");
    	g.addEdge("31", "3");g.addEdge("3", "31");
    	g.addEdge("31", "4");g.addEdge("4", "31");
    	g.addEdge("31", "5");g.addEdge("5", "31");
    	g.addEdge("31", "6");g.addEdge("6", "31");
    	g.addEdge("31", "7");g.addEdge("7", "31");
    	g.addEdge("31", "8");g.addEdge("8", "31");
    	g.addEdge("31", "9");g.addEdge("9", "31");
    	g.addEdge("31", "10");g.addEdge("10", "31");
    	g.addEdge("31", "11");g.addEdge("11", "31");
    	g.addEdge("31", "12");g.addEdge("12", "31");
    	g.addEdge("31", "13");g.addEdge("13", "31");
    	g.addEdge("31", "14");g.addEdge("14", "31");
    	g.addEdge("31", "16");g.addEdge("16", "31");
    	g.addEdge("31", "17");g.addEdge("17", "31");
    	g.addEdge("31", "18");g.addEdge("18", "31");
    	g.addEdge("31", "19");g.addEdge("19", "31");
    	g.addEdge("31", "20");g.addEdge("20", "31");
    	g.addEdge("31", "21");g.addEdge("21", "31");
    	g.addEdge("31", "22");g.addEdge("22", "31");
    	g.addEdge("31", "24");g.addEdge("24", "31");
    	g.addEdge("31", "25");g.addEdge("25", "31");
    	g.addEdge("31", "26");g.addEdge("26", "31");
    	g.addEdge("31", "28");g.addEdge("28", "31");
    	g.addEdge("31", "30");g.addEdge("30", "31");
    	g.addEdge("32", "1");g.addEdge("1", "32");
    	g.addEdge("32", "2");g.addEdge("2", "32");
    	g.addEdge("32", "3");g.addEdge("3", "32");
    	g.addEdge("32", "4");g.addEdge("4", "32");
    	g.addEdge("32", "5");g.addEdge("5", "32");
    	g.addEdge("32", "6");g.addEdge("6", "32");
    	g.addEdge("32", "7");g.addEdge("7", "32");
    	g.addEdge("32", "8");g.addEdge("8", "32");
    	g.addEdge("32", "9");g.addEdge("9", "32");
    	g.addEdge("32", "10");g.addEdge("10", "32");
    	g.addEdge("32", "11");g.addEdge("11", "32");
    	g.addEdge("32", "12");g.addEdge("12", "32");
    	g.addEdge("32", "13");g.addEdge("13", "32");
    	g.addEdge("32", "14");g.addEdge("14", "32");
    	g.addEdge("32", "15");g.addEdge("15", "32");
    	g.addEdge("32", "17");g.addEdge("17", "32");
    	g.addEdge("32", "18");g.addEdge("18", "32");
    	g.addEdge("32", "19");g.addEdge("19", "32");
    	g.addEdge("32", "20");g.addEdge("20", "32");
    	g.addEdge("32", "21");g.addEdge("21", "32");
    	g.addEdge("32", "22");g.addEdge("22", "32");
    	g.addEdge("32", "23");g.addEdge("23", "32");
    	g.addEdge("32", "25");g.addEdge("25", "32");
    	g.addEdge("32", "26");g.addEdge("26", "32");
    	g.addEdge("32", "27");g.addEdge("27", "32");
    	g.addEdge("32", "29");g.addEdge("29", "32");
    	g.addEdge("33", "2");g.addEdge("2", "33");
    	g.addEdge("33", "3");g.addEdge("3", "33");
    	g.addEdge("33", "4");g.addEdge("4", "33");
    	g.addEdge("33", "5");g.addEdge("5", "33");
    	g.addEdge("33", "6");g.addEdge("6", "33");
    	g.addEdge("33", "7");g.addEdge("7", "33");
    	g.addEdge("33", "8");g.addEdge("8", "33");
    	g.addEdge("33", "9");g.addEdge("9", "33");
    	g.addEdge("33", "10");g.addEdge("10", "33");
    	g.addEdge("33", "11");g.addEdge("11", "33");
    	g.addEdge("33", "12");g.addEdge("12", "33");
    	g.addEdge("33", "13");g.addEdge("13", "33");
    	g.addEdge("33", "14");g.addEdge("14", "33");
    	g.addEdge("33", "15");g.addEdge("15", "33");
    	g.addEdge("33", "16");g.addEdge("16", "33");
    	g.addEdge("33", "17");g.addEdge("17", "33");
    	g.addEdge("33", "18");g.addEdge("18", "33");
    	g.addEdge("33", "19");g.addEdge("19", "33");
    	g.addEdge("33", "20");g.addEdge("20", "33");
    	g.addEdge("33", "21");g.addEdge("21", "33");
    	g.addEdge("33", "22");g.addEdge("22", "33");
    	g.addEdge("33", "23");g.addEdge("23", "33");
    	g.addEdge("33", "24");g.addEdge("24", "33");
    	g.addEdge("33", "25");g.addEdge("25", "33");
    	g.addEdge("33", "26");g.addEdge("26", "33");
    	g.addEdge("33", "27");g.addEdge("27", "33");
    	g.addEdge("33", "28");g.addEdge("28", "33");
    	g.addEdge("33", "29");g.addEdge("29", "33");
    	g.addEdge("33", "30");g.addEdge("30", "33");
    	g.addEdge("33", "31");g.addEdge("31", "33");
    	g.addEdge("33", "32");g.addEdge("32", "33");
    	g.addEdge("34", "1");g.addEdge("1", "34");
    	g.addEdge("34", "3");g.addEdge("3", "34");
    	g.addEdge("34", "4");g.addEdge("4", "34");
    	g.addEdge("34", "5");g.addEdge("5", "34");
    	g.addEdge("34", "6");g.addEdge("6", "34");
    	g.addEdge("34", "7");g.addEdge("7", "34");
    	g.addEdge("34", "8");g.addEdge("8", "34");
    	g.addEdge("34", "9");g.addEdge("9", "34");
    	g.addEdge("34", "10");g.addEdge("10", "34");
    	g.addEdge("34", "11");g.addEdge("11", "34");
    	g.addEdge("34", "12");g.addEdge("12", "34");
    	g.addEdge("34", "13");g.addEdge("13", "34");
    	g.addEdge("34", "14");g.addEdge("14", "34");
    	g.addEdge("34", "15");g.addEdge("15", "34");
    	g.addEdge("34", "16");g.addEdge("16", "34");
    	g.addEdge("34", "17");g.addEdge("17", "34");
    	g.addEdge("34", "18");g.addEdge("18", "34");
    	g.addEdge("34", "19");g.addEdge("19", "34");
    	g.addEdge("34", "20");g.addEdge("20", "34");
    	g.addEdge("34", "21");g.addEdge("21", "34");
    	g.addEdge("34", "22");g.addEdge("22", "34");
    	g.addEdge("34", "23");g.addEdge("23", "34");
    	g.addEdge("34", "24");g.addEdge("24", "34");
    	g.addEdge("34", "25");g.addEdge("25", "34");
    	g.addEdge("34", "26");g.addEdge("26", "34");
    	g.addEdge("34", "27");g.addEdge("27", "34");
    	g.addEdge("34", "28");g.addEdge("28", "34");
    	g.addEdge("34", "29");g.addEdge("29", "34");
    	g.addEdge("34", "30");g.addEdge("30", "34");
    	g.addEdge("34", "31");g.addEdge("31", "34");
    	g.addEdge("34", "32");g.addEdge("32", "34");
    	g.addEdge("35", "1");g.addEdge("1", "35");
    	g.addEdge("35", "2");g.addEdge("2", "35");
    	g.addEdge("35", "4");g.addEdge("4", "35");
    	g.addEdge("35", "5");g.addEdge("5", "35");
    	g.addEdge("35", "6");g.addEdge("6", "35");
    	g.addEdge("35", "7");g.addEdge("7", "35");
    	g.addEdge("35", "8");g.addEdge("8", "35");
    	g.addEdge("35", "9");g.addEdge("9", "35");
    	g.addEdge("35", "10");g.addEdge("10", "35");
    	g.addEdge("35", "11");g.addEdge("11", "35");
    	g.addEdge("35", "12");g.addEdge("12", "35");
    	g.addEdge("35", "13");g.addEdge("13", "35");
    	g.addEdge("35", "14");g.addEdge("14", "35");
    	g.addEdge("35", "15");g.addEdge("15", "35");
    	g.addEdge("35", "16");g.addEdge("16", "35");
    	g.addEdge("35", "17");g.addEdge("17", "35");
    	g.addEdge("35", "18");g.addEdge("18", "35");
    	g.addEdge("35", "19");g.addEdge("19", "35");
    	g.addEdge("35", "20");g.addEdge("20", "35");
    	g.addEdge("35", "21");g.addEdge("21", "35");
    	g.addEdge("35", "22");g.addEdge("22", "35");
    	g.addEdge("35", "23");g.addEdge("23", "35");
    	g.addEdge("35", "24");g.addEdge("24", "35");
    	g.addEdge("35", "25");g.addEdge("25", "35");
    	g.addEdge("35", "26");g.addEdge("26", "35");
    	g.addEdge("35", "27");g.addEdge("27", "35");
    	g.addEdge("35", "28");g.addEdge("28", "35");
    	g.addEdge("35", "29");g.addEdge("29", "35");
    	g.addEdge("35", "30");g.addEdge("30", "35");
    	g.addEdge("35", "31");g.addEdge("31", "35");
    	g.addEdge("35", "32");g.addEdge("32", "35");
    	g.addEdge("35", "34");g.addEdge("34", "35");
    	g.addEdge("36", "1");g.addEdge("1", "36");
    	g.addEdge("36", "2");g.addEdge("2", "36");
    	g.addEdge("36", "3");g.addEdge("3", "36");
    	g.addEdge("36", "5");g.addEdge("5", "36");
    	g.addEdge("36", "6");g.addEdge("6", "36");
    	g.addEdge("36", "7");g.addEdge("7", "36");
    	g.addEdge("36", "8");g.addEdge("8", "36");
    	g.addEdge("36", "9");g.addEdge("9", "36");
    	g.addEdge("36", "10");g.addEdge("10", "36");
    	g.addEdge("36", "11");g.addEdge("11", "36");
    	g.addEdge("36", "12");g.addEdge("12", "36");
    	g.addEdge("36", "13");g.addEdge("13", "36");
    	g.addEdge("36", "14");g.addEdge("14", "36");
    	g.addEdge("36", "15");g.addEdge("15", "36");
    	g.addEdge("36", "16");g.addEdge("16", "36");
    	g.addEdge("36", "17");g.addEdge("17", "36");
    	g.addEdge("36", "18");g.addEdge("18", "36");
    	g.addEdge("36", "19");g.addEdge("19", "36");
    	g.addEdge("36", "20");g.addEdge("20", "36");
    	g.addEdge("36", "21");g.addEdge("21", "36");
    	g.addEdge("36", "22");g.addEdge("22", "36");
    	g.addEdge("36", "23");g.addEdge("23", "36");
    	g.addEdge("36", "24");g.addEdge("24", "36");
    	g.addEdge("36", "25");g.addEdge("25", "36");
    	g.addEdge("36", "26");g.addEdge("26", "36");
    	g.addEdge("36", "27");g.addEdge("27", "36");
    	g.addEdge("36", "28");g.addEdge("28", "36");
    	g.addEdge("36", "29");g.addEdge("29", "36");
    	g.addEdge("36", "30");g.addEdge("30", "36");
    	g.addEdge("36", "31");g.addEdge("31", "36");
    	g.addEdge("36", "32");g.addEdge("32", "36");
    	g.addEdge("36", "33");g.addEdge("33", "36");
    	g.addEdge("37", "1");g.addEdge("1", "37");
    	g.addEdge("37", "2");g.addEdge("2", "37");
    	g.addEdge("37", "3");g.addEdge("3", "37");
    	g.addEdge("37", "4");g.addEdge("4", "37");
    	g.addEdge("37", "6");g.addEdge("6", "37");
    	g.addEdge("37", "7");g.addEdge("7", "37");
    	g.addEdge("37", "8");g.addEdge("8", "37");
    	g.addEdge("37", "9");g.addEdge("9", "37");
    	g.addEdge("37", "10");g.addEdge("10", "37");
    	g.addEdge("37", "11");g.addEdge("11", "37");
    	g.addEdge("37", "12");g.addEdge("12", "37");
    	g.addEdge("37", "13");g.addEdge("13", "37");
    	g.addEdge("37", "14");g.addEdge("14", "37");
    	g.addEdge("37", "15");g.addEdge("15", "37");
    	g.addEdge("37", "16");g.addEdge("16", "37");
    	g.addEdge("37", "17");g.addEdge("17", "37");
    	g.addEdge("37", "18");g.addEdge("18", "37");
    	g.addEdge("37", "19");g.addEdge("19", "37");
    	g.addEdge("37", "20");g.addEdge("20", "37");
    	g.addEdge("37", "21");g.addEdge("21", "37");
    	g.addEdge("37", "22");g.addEdge("22", "37");
    	g.addEdge("37", "23");g.addEdge("23", "37");
    	g.addEdge("37", "24");g.addEdge("24", "37");
    	g.addEdge("37", "25");g.addEdge("25", "37");
    	g.addEdge("37", "26");g.addEdge("26", "37");
    	g.addEdge("37", "27");g.addEdge("27", "37");
    	g.addEdge("37", "28");g.addEdge("28", "37");
    	g.addEdge("37", "29");g.addEdge("29", "37");
    	g.addEdge("37", "30");g.addEdge("30", "37");
    	g.addEdge("37", "31");g.addEdge("31", "37");
    	g.addEdge("37", "32");g.addEdge("32", "37");
    	g.addEdge("37", "34");g.addEdge("34", "37");
    	g.addEdge("37", "35");g.addEdge("35", "37");
    	g.addEdge("37", "36");g.addEdge("36", "37");
    	g.addEdge("38", "1");g.addEdge("1", "38");
    	g.addEdge("38", "2");g.addEdge("2", "38");
    	g.addEdge("38", "3");g.addEdge("3", "38");
    	g.addEdge("38", "4");g.addEdge("4", "38");
    	g.addEdge("38", "5");g.addEdge("5", "38");
    	g.addEdge("38", "7");g.addEdge("7", "38");
    	g.addEdge("38", "8");g.addEdge("8", "38");
    	g.addEdge("38", "9");g.addEdge("9", "38");
    	g.addEdge("38", "10");g.addEdge("10", "38");
    	g.addEdge("38", "11");g.addEdge("11", "38");
    	g.addEdge("38", "12");g.addEdge("12", "38");
    	g.addEdge("38", "13");g.addEdge("13", "38");
    	g.addEdge("38", "14");g.addEdge("14", "38");
    	g.addEdge("38", "15");g.addEdge("15", "38");
    	g.addEdge("38", "16");g.addEdge("16", "38");
    	g.addEdge("38", "17");g.addEdge("17", "38");
    	g.addEdge("38", "18");g.addEdge("18", "38");
    	g.addEdge("38", "19");g.addEdge("19", "38");
    	g.addEdge("38", "20");g.addEdge("20", "38");
    	g.addEdge("38", "21");g.addEdge("21", "38");
    	g.addEdge("38", "22");g.addEdge("22", "38");
    	g.addEdge("38", "23");g.addEdge("23", "38");
    	g.addEdge("38", "24");g.addEdge("24", "38");
    	g.addEdge("38", "25");g.addEdge("25", "38");
    	g.addEdge("38", "26");g.addEdge("26", "38");
    	g.addEdge("38", "27");g.addEdge("27", "38");
    	g.addEdge("38", "28");g.addEdge("28", "38");
    	g.addEdge("38", "29");g.addEdge("29", "38");
    	g.addEdge("38", "30");g.addEdge("30", "38");
    	g.addEdge("38", "31");g.addEdge("31", "38");
    	g.addEdge("38", "32");g.addEdge("32", "38");
    	g.addEdge("38", "33");g.addEdge("33", "38");
    	g.addEdge("38", "35");g.addEdge("35", "38");
    	g.addEdge("38", "36");g.addEdge("36", "38");
    	g.addEdge("39", "1");g.addEdge("1", "39");
    	g.addEdge("39", "2");g.addEdge("2", "39");
    	g.addEdge("39", "3");g.addEdge("3", "39");
    	g.addEdge("39", "4");g.addEdge("4", "39");
    	g.addEdge("39", "5");g.addEdge("5", "39");
    	g.addEdge("39", "6");g.addEdge("6", "39");
    	g.addEdge("39", "8");g.addEdge("8", "39");
    	g.addEdge("39", "9");g.addEdge("9", "39");
    	g.addEdge("39", "10");g.addEdge("10", "39");
    	g.addEdge("39", "11");g.addEdge("11", "39");
    	g.addEdge("39", "12");g.addEdge("12", "39");
    	g.addEdge("39", "13");g.addEdge("13", "39");
    	g.addEdge("39", "14");g.addEdge("14", "39");
    	g.addEdge("39", "15");g.addEdge("15", "39");
    	g.addEdge("39", "16");g.addEdge("16", "39");
    	g.addEdge("39", "17");g.addEdge("17", "39");
    	g.addEdge("39", "18");g.addEdge("18", "39");
    	g.addEdge("39", "19");g.addEdge("19", "39");
    	g.addEdge("39", "20");g.addEdge("20", "39");
    	g.addEdge("39", "21");g.addEdge("21", "39");
    	g.addEdge("39", "22");g.addEdge("22", "39");
    	g.addEdge("39", "23");g.addEdge("23", "39");
    	g.addEdge("39", "24");g.addEdge("24", "39");
    	g.addEdge("39", "25");g.addEdge("25", "39");
    	g.addEdge("39", "26");g.addEdge("26", "39");
    	g.addEdge("39", "27");g.addEdge("27", "39");
    	g.addEdge("39", "28");g.addEdge("28", "39");
    	g.addEdge("39", "29");g.addEdge("29", "39");
    	g.addEdge("39", "30");g.addEdge("30", "39");
    	g.addEdge("39", "31");g.addEdge("31", "39");
    	g.addEdge("39", "32");g.addEdge("32", "39");
    	g.addEdge("39", "33");g.addEdge("33", "39");
    	g.addEdge("39", "34");g.addEdge("34", "39");
    	g.addEdge("39", "36");g.addEdge("36", "39");
    	g.addEdge("39", "38");g.addEdge("38", "39");
    	g.addEdge("40", "1");g.addEdge("1", "40");
    	g.addEdge("40", "2");g.addEdge("2", "40");
    	g.addEdge("40", "3");g.addEdge("3", "40");
    	g.addEdge("40", "4");g.addEdge("4", "40");
    	g.addEdge("40", "5");g.addEdge("5", "40");
    	g.addEdge("40", "6");g.addEdge("6", "40");
    	g.addEdge("40", "7");g.addEdge("7", "40");
    	g.addEdge("40", "9");g.addEdge("9", "40");
    	g.addEdge("40", "10");g.addEdge("10", "40");
    	g.addEdge("40", "11");g.addEdge("11", "40");
    	g.addEdge("40", "12");g.addEdge("12", "40");
    	g.addEdge("40", "13");g.addEdge("13", "40");
    	g.addEdge("40", "14");g.addEdge("14", "40");
    	g.addEdge("40", "15");g.addEdge("15", "40");
    	g.addEdge("40", "16");g.addEdge("16", "40");
    	g.addEdge("40", "17");g.addEdge("17", "40");
    	g.addEdge("40", "18");g.addEdge("18", "40");
    	g.addEdge("40", "19");g.addEdge("19", "40");
    	g.addEdge("40", "20");g.addEdge("20", "40");
    	g.addEdge("40", "21");g.addEdge("21", "40");
    	g.addEdge("40", "22");g.addEdge("22", "40");
    	g.addEdge("40", "23");g.addEdge("23", "40");
    	g.addEdge("40", "24");g.addEdge("24", "40");
    	g.addEdge("40", "25");g.addEdge("25", "40");
    	g.addEdge("40", "26");g.addEdge("26", "40");
    	g.addEdge("40", "27");g.addEdge("27", "40");
    	g.addEdge("40", "28");g.addEdge("28", "40");
    	g.addEdge("40", "29");g.addEdge("29", "40");
    	g.addEdge("40", "30");g.addEdge("30", "40");
    	g.addEdge("40", "31");g.addEdge("31", "40");
    	g.addEdge("40", "32");g.addEdge("32", "40");
    	g.addEdge("40", "33");g.addEdge("33", "40");
    	g.addEdge("40", "34");g.addEdge("34", "40");
    	g.addEdge("40", "35");g.addEdge("35", "40");
    	g.addEdge("40", "37");g.addEdge("37", "40");
    	g.addEdge("41", "1");g.addEdge("1", "41");
    	g.addEdge("41", "2");g.addEdge("2", "41");
    	g.addEdge("41", "3");g.addEdge("3", "41");
    	g.addEdge("41", "4");g.addEdge("4", "41");
    	g.addEdge("41", "5");g.addEdge("5", "41");
    	g.addEdge("41", "6");g.addEdge("6", "41");
    	g.addEdge("41", "7");g.addEdge("7", "41");
    	g.addEdge("41", "8");g.addEdge("8", "41");
    	g.addEdge("41", "10");g.addEdge("10", "41");
    	g.addEdge("41", "11");g.addEdge("11", "41");
    	g.addEdge("41", "12");g.addEdge("12", "41");
    	g.addEdge("41", "13");g.addEdge("13", "41");
    	g.addEdge("41", "14");g.addEdge("14", "41");
    	g.addEdge("41", "15");g.addEdge("15", "41");
    	g.addEdge("41", "16");g.addEdge("16", "41");
    	g.addEdge("41", "17");g.addEdge("17", "41");
    	g.addEdge("41", "18");g.addEdge("18", "41");
    	g.addEdge("41", "19");g.addEdge("19", "41");
    	g.addEdge("41", "20");g.addEdge("20", "41");
    	g.addEdge("41", "21");g.addEdge("21", "41");
    	g.addEdge("41", "22");g.addEdge("22", "41");
    	g.addEdge("41", "23");g.addEdge("23", "41");
    	g.addEdge("41", "24");g.addEdge("24", "41");
    	g.addEdge("41", "25");g.addEdge("25", "41");
    	g.addEdge("41", "26");g.addEdge("26", "41");
    	g.addEdge("41", "27");g.addEdge("27", "41");
    	g.addEdge("41", "28");g.addEdge("28", "41");
    	g.addEdge("41", "29");g.addEdge("29", "41");
    	g.addEdge("41", "30");g.addEdge("30", "41");
    	g.addEdge("41", "31");g.addEdge("31", "41");
    	g.addEdge("41", "32");g.addEdge("32", "41");
    	g.addEdge("41", "34");g.addEdge("34", "41");
    	g.addEdge("41", "35");g.addEdge("35", "41");
    	g.addEdge("41", "36");g.addEdge("36", "41");
    	g.addEdge("41", "37");g.addEdge("37", "41");
    	g.addEdge("41", "38");g.addEdge("38", "41");
    	g.addEdge("41", "39");g.addEdge("39", "41");
    	g.addEdge("41", "40");g.addEdge("40", "41");
    	g.addEdge("42", "1");g.addEdge("1", "42");
    	g.addEdge("42", "2");g.addEdge("2", "42");
    	g.addEdge("42", "3");g.addEdge("3", "42");
    	g.addEdge("42", "4");g.addEdge("4", "42");
    	g.addEdge("42", "5");g.addEdge("5", "42");
    	g.addEdge("42", "6");g.addEdge("6", "42");
    	g.addEdge("42", "7");g.addEdge("7", "42");
    	g.addEdge("42", "8");g.addEdge("8", "42");
    	g.addEdge("42", "9");g.addEdge("9", "42");
    	g.addEdge("42", "11");g.addEdge("11", "42");
    	g.addEdge("42", "12");g.addEdge("12", "42");
    	g.addEdge("42", "13");g.addEdge("13", "42");
    	g.addEdge("42", "14");g.addEdge("14", "42");
    	g.addEdge("42", "15");g.addEdge("15", "42");
    	g.addEdge("42", "16");g.addEdge("16", "42");
    	g.addEdge("42", "17");g.addEdge("17", "42");
    	g.addEdge("42", "18");g.addEdge("18", "42");
    	g.addEdge("42", "19");g.addEdge("19", "42");
    	g.addEdge("42", "20");g.addEdge("20", "42");
    	g.addEdge("42", "21");g.addEdge("21", "42");
    	g.addEdge("42", "22");g.addEdge("22", "42");
    	g.addEdge("42", "23");g.addEdge("23", "42");
    	g.addEdge("42", "24");g.addEdge("24", "42");
    	g.addEdge("42", "25");g.addEdge("25", "42");
    	g.addEdge("42", "26");g.addEdge("26", "42");
    	g.addEdge("42", "27");g.addEdge("27", "42");
    	g.addEdge("42", "28");g.addEdge("28", "42");
    	g.addEdge("42", "29");g.addEdge("29", "42");
    	g.addEdge("42", "30");g.addEdge("30", "42");
    	g.addEdge("42", "31");g.addEdge("31", "42");
    	g.addEdge("42", "32");g.addEdge("32", "42");
    	g.addEdge("42", "33");g.addEdge("33", "42");
    	g.addEdge("42", "35");g.addEdge("35", "42");
    	g.addEdge("42", "36");g.addEdge("36", "42");
    	g.addEdge("42", "37");g.addEdge("37", "42");
    	g.addEdge("42", "38");g.addEdge("38", "42");
    	g.addEdge("42", "39");g.addEdge("39", "42");
    	g.addEdge("42", "40");g.addEdge("40", "42");
    	g.addEdge("43", "1");g.addEdge("1", "43");
    	g.addEdge("43", "2");g.addEdge("2", "43");
    	g.addEdge("43", "3");g.addEdge("3", "43");
    	g.addEdge("43", "4");g.addEdge("4", "43");
    	g.addEdge("43", "5");g.addEdge("5", "43");
    	g.addEdge("43", "6");g.addEdge("6", "43");
    	g.addEdge("43", "7");g.addEdge("7", "43");
    	g.addEdge("43", "8");g.addEdge("8", "43");
    	g.addEdge("43", "9");g.addEdge("9", "43");
    	g.addEdge("43", "10");g.addEdge("10", "43");
    	g.addEdge("43", "12");g.addEdge("12", "43");
    	g.addEdge("43", "13");g.addEdge("13", "43");
    	g.addEdge("43", "14");g.addEdge("14", "43");
    	g.addEdge("43", "15");g.addEdge("15", "43");
    	g.addEdge("43", "16");g.addEdge("16", "43");
    	g.addEdge("43", "17");g.addEdge("17", "43");
    	g.addEdge("43", "18");g.addEdge("18", "43");
    	g.addEdge("43", "19");g.addEdge("19", "43");
    	g.addEdge("43", "20");g.addEdge("20", "43");
    	g.addEdge("43", "21");g.addEdge("21", "43");
    	g.addEdge("43", "22");g.addEdge("22", "43");
    	g.addEdge("43", "23");g.addEdge("23", "43");
    	g.addEdge("43", "24");g.addEdge("24", "43");
    	g.addEdge("43", "25");g.addEdge("25", "43");
    	g.addEdge("43", "26");g.addEdge("26", "43");
    	g.addEdge("43", "27");g.addEdge("27", "43");
    	g.addEdge("43", "28");g.addEdge("28", "43");
    	g.addEdge("43", "29");g.addEdge("29", "43");
    	g.addEdge("43", "30");g.addEdge("30", "43");
    	g.addEdge("43", "31");g.addEdge("31", "43");
    	g.addEdge("43", "32");g.addEdge("32", "43");
    	g.addEdge("43", "33");g.addEdge("33", "43");
    	g.addEdge("43", "34");g.addEdge("34", "43");
    	g.addEdge("43", "36");g.addEdge("36", "43");
    	g.addEdge("43", "37");g.addEdge("37", "43");
    	g.addEdge("43", "38");g.addEdge("38", "43");
    	g.addEdge("43", "39");g.addEdge("39", "43");
    	g.addEdge("43", "40");g.addEdge("40", "43");
    	g.addEdge("43", "42");g.addEdge("42", "43");
    	g.addEdge("44", "1");g.addEdge("1", "44");
    	g.addEdge("44", "2");g.addEdge("2", "44");
    	g.addEdge("44", "3");g.addEdge("3", "44");
    	g.addEdge("44", "4");g.addEdge("4", "44");
    	g.addEdge("44", "5");g.addEdge("5", "44");
    	g.addEdge("44", "6");g.addEdge("6", "44");
    	g.addEdge("44", "7");g.addEdge("7", "44");
    	g.addEdge("44", "8");g.addEdge("8", "44");
    	g.addEdge("44", "9");g.addEdge("9", "44");
    	g.addEdge("44", "10");g.addEdge("10", "44");
    	g.addEdge("44", "11");g.addEdge("11", "44");
    	g.addEdge("44", "13");g.addEdge("13", "44");
    	g.addEdge("44", "14");g.addEdge("14", "44");
    	g.addEdge("44", "15");g.addEdge("15", "44");
    	g.addEdge("44", "16");g.addEdge("16", "44");
    	g.addEdge("44", "17");g.addEdge("17", "44");
    	g.addEdge("44", "18");g.addEdge("18", "44");
    	g.addEdge("44", "19");g.addEdge("19", "44");
    	g.addEdge("44", "20");g.addEdge("20", "44");
    	g.addEdge("44", "21");g.addEdge("21", "44");
    	g.addEdge("44", "22");g.addEdge("22", "44");
    	g.addEdge("44", "23");g.addEdge("23", "44");
    	g.addEdge("44", "24");g.addEdge("24", "44");
    	g.addEdge("44", "25");g.addEdge("25", "44");
    	g.addEdge("44", "26");g.addEdge("26", "44");
    	g.addEdge("44", "27");g.addEdge("27", "44");
    	g.addEdge("44", "28");g.addEdge("28", "44");
    	g.addEdge("44", "29");g.addEdge("29", "44");
    	g.addEdge("44", "30");g.addEdge("30", "44");
    	g.addEdge("44", "31");g.addEdge("31", "44");
    	g.addEdge("44", "32");g.addEdge("32", "44");
    	g.addEdge("44", "33");g.addEdge("33", "44");
    	g.addEdge("44", "34");g.addEdge("34", "44");
    	g.addEdge("44", "35");g.addEdge("35", "44");
    	g.addEdge("44", "37");g.addEdge("37", "44");
    	g.addEdge("44", "38");g.addEdge("38", "44");
    	g.addEdge("44", "39");g.addEdge("39", "44");
    	g.addEdge("44", "40");g.addEdge("40", "44");
    	g.addEdge("44", "41");g.addEdge("41", "44");
    	g.addEdge("45", "1");g.addEdge("1", "45");
    	g.addEdge("45", "2");g.addEdge("2", "45");
    	g.addEdge("45", "3");g.addEdge("3", "45");
    	g.addEdge("45", "4");g.addEdge("4", "45");
    	g.addEdge("45", "5");g.addEdge("5", "45");
    	g.addEdge("45", "6");g.addEdge("6", "45");
    	g.addEdge("45", "7");g.addEdge("7", "45");
    	g.addEdge("45", "8");g.addEdge("8", "45");
    	g.addEdge("45", "9");g.addEdge("9", "45");
    	g.addEdge("45", "10");g.addEdge("10", "45");
    	g.addEdge("45", "11");g.addEdge("11", "45");
    	g.addEdge("45", "12");g.addEdge("12", "45");
    	g.addEdge("45", "14");g.addEdge("14", "45");
    	g.addEdge("45", "15");g.addEdge("15", "45");
    	g.addEdge("45", "16");g.addEdge("16", "45");
    	g.addEdge("45", "17");g.addEdge("17", "45");
    	g.addEdge("45", "18");g.addEdge("18", "45");
    	g.addEdge("45", "19");g.addEdge("19", "45");
    	g.addEdge("45", "20");g.addEdge("20", "45");
    	g.addEdge("45", "21");g.addEdge("21", "45");
    	g.addEdge("45", "22");g.addEdge("22", "45");
    	g.addEdge("45", "23");g.addEdge("23", "45");
    	g.addEdge("45", "24");g.addEdge("24", "45");
    	g.addEdge("45", "25");g.addEdge("25", "45");
    	g.addEdge("45", "26");g.addEdge("26", "45");
    	g.addEdge("45", "27");g.addEdge("27", "45");
    	g.addEdge("45", "28");g.addEdge("28", "45");
    	g.addEdge("45", "29");g.addEdge("29", "45");
    	g.addEdge("45", "30");g.addEdge("30", "45");
    	g.addEdge("45", "31");g.addEdge("31", "45");
    	g.addEdge("45", "32");g.addEdge("32", "45");
    	g.addEdge("45", "33");g.addEdge("33", "45");
    	g.addEdge("45", "34");g.addEdge("34", "45");
    	g.addEdge("45", "35");g.addEdge("35", "45");
    	g.addEdge("45", "36");g.addEdge("36", "45");
    	g.addEdge("45", "38");g.addEdge("38", "45");
    	g.addEdge("45", "39");g.addEdge("39", "45");
    	g.addEdge("45", "40");g.addEdge("40", "45");
    	g.addEdge("45", "42");g.addEdge("42", "45");
    	g.addEdge("45", "43");g.addEdge("43", "45");
    	g.addEdge("45", "44");g.addEdge("44", "45");
    	g.addEdge("46", "1");g.addEdge("1", "46");
    	g.addEdge("46", "2");g.addEdge("2", "46");
    	g.addEdge("46", "3");g.addEdge("3", "46");
    	g.addEdge("46", "4");g.addEdge("4", "46");
    	g.addEdge("46", "5");g.addEdge("5", "46");
    	g.addEdge("46", "6");g.addEdge("6", "46");
    	g.addEdge("46", "7");g.addEdge("7", "46");
    	g.addEdge("46", "8");g.addEdge("8", "46");
    	g.addEdge("46", "9");g.addEdge("9", "46");
    	g.addEdge("46", "10");g.addEdge("10", "46");
    	g.addEdge("46", "11");g.addEdge("11", "46");
    	g.addEdge("46", "12");g.addEdge("12", "46");
    	g.addEdge("46", "13");g.addEdge("13", "46");
    	g.addEdge("46", "15");g.addEdge("15", "46");
    	g.addEdge("46", "16");g.addEdge("16", "46");
    	g.addEdge("46", "17");g.addEdge("17", "46");
    	g.addEdge("46", "18");g.addEdge("18", "46");
    	g.addEdge("46", "19");g.addEdge("19", "46");
    	g.addEdge("46", "20");g.addEdge("20", "46");
    	g.addEdge("46", "21");g.addEdge("21", "46");
    	g.addEdge("46", "22");g.addEdge("22", "46");
    	g.addEdge("46", "23");g.addEdge("23", "46");
    	g.addEdge("46", "24");g.addEdge("24", "46");
    	g.addEdge("46", "25");g.addEdge("25", "46");
    	g.addEdge("46", "26");g.addEdge("26", "46");
    	g.addEdge("46", "27");g.addEdge("27", "46");
    	g.addEdge("46", "28");g.addEdge("28", "46");
    	g.addEdge("46", "29");g.addEdge("29", "46");
    	g.addEdge("46", "30");g.addEdge("30", "46");
    	g.addEdge("46", "31");g.addEdge("31", "46");
    	g.addEdge("46", "32");g.addEdge("32", "46");
    	g.addEdge("46", "33");g.addEdge("33", "46");
    	g.addEdge("46", "34");g.addEdge("34", "46");
    	g.addEdge("46", "35");g.addEdge("35", "46");
    	g.addEdge("46", "36");g.addEdge("36", "46");
    	g.addEdge("46", "37");g.addEdge("37", "46");
    	g.addEdge("46", "39");g.addEdge("39", "46");
    	g.addEdge("46", "40");g.addEdge("40", "46");
    	g.addEdge("46", "41");g.addEdge("41", "46");
    	g.addEdge("46", "43");g.addEdge("43", "46");
    	g.addEdge("46", "44");g.addEdge("44", "46");
    	g.addEdge("47", "1");g.addEdge("1", "47");
    	g.addEdge("47", "2");g.addEdge("2", "47");
    	g.addEdge("47", "3");g.addEdge("3", "47");
    	g.addEdge("47", "4");g.addEdge("4", "47");
    	g.addEdge("47", "5");g.addEdge("5", "47");
    	g.addEdge("47", "6");g.addEdge("6", "47");
    	g.addEdge("47", "7");g.addEdge("7", "47");
    	g.addEdge("47", "8");g.addEdge("8", "47");
    	g.addEdge("47", "9");g.addEdge("9", "47");
    	g.addEdge("47", "10");g.addEdge("10", "47");
    	g.addEdge("47", "11");g.addEdge("11", "47");
    	g.addEdge("47", "12");g.addEdge("12", "47");
    	g.addEdge("47", "13");g.addEdge("13", "47");
    	g.addEdge("47", "14");g.addEdge("14", "47");
    	g.addEdge("47", "16");g.addEdge("16", "47");
    	g.addEdge("47", "17");g.addEdge("17", "47");
    	g.addEdge("47", "18");g.addEdge("18", "47");
    	g.addEdge("47", "19");g.addEdge("19", "47");
    	g.addEdge("47", "20");g.addEdge("20", "47");
    	g.addEdge("47", "21");g.addEdge("21", "47");
    	g.addEdge("47", "22");g.addEdge("22", "47");
    	g.addEdge("47", "23");g.addEdge("23", "47");
    	g.addEdge("47", "24");g.addEdge("24", "47");
    	g.addEdge("47", "25");g.addEdge("25", "47");
    	g.addEdge("47", "26");g.addEdge("26", "47");
    	g.addEdge("47", "27");g.addEdge("27", "47");
    	g.addEdge("47", "28");g.addEdge("28", "47");
    	g.addEdge("47", "29");g.addEdge("29", "47");
    	g.addEdge("47", "30");g.addEdge("30", "47");
    	g.addEdge("47", "31");g.addEdge("31", "47");
    	g.addEdge("47", "32");g.addEdge("32", "47");
    	g.addEdge("47", "33");g.addEdge("33", "47");
    	g.addEdge("47", "34");g.addEdge("34", "47");
    	g.addEdge("47", "35");g.addEdge("35", "47");
    	g.addEdge("47", "36");g.addEdge("36", "47");
    	g.addEdge("47", "37");g.addEdge("37", "47");
    	g.addEdge("47", "38");g.addEdge("38", "47");
    	g.addEdge("47", "40");g.addEdge("40", "47");
    	g.addEdge("47", "41");g.addEdge("41", "47");
    	g.addEdge("47", "42");g.addEdge("42", "47");
    	g.addEdge("47", "44");g.addEdge("44", "47");
    	g.addEdge("47", "46");g.addEdge("46", "47");
    	g.addEdge("48", "1");g.addEdge("1", "48");
    	g.addEdge("48", "2");g.addEdge("2", "48");
    	g.addEdge("48", "3");g.addEdge("3", "48");
    	g.addEdge("48", "4");g.addEdge("4", "48");
    	g.addEdge("48", "5");g.addEdge("5", "48");
    	g.addEdge("48", "6");g.addEdge("6", "48");
    	g.addEdge("48", "7");g.addEdge("7", "48");
    	g.addEdge("48", "8");g.addEdge("8", "48");
    	g.addEdge("48", "9");g.addEdge("9", "48");
    	g.addEdge("48", "10");g.addEdge("10", "48");
    	g.addEdge("48", "11");g.addEdge("11", "48");
    	g.addEdge("48", "12");g.addEdge("12", "48");
    	g.addEdge("48", "13");g.addEdge("13", "48");
    	g.addEdge("48", "14");g.addEdge("14", "48");
    	g.addEdge("48", "15");g.addEdge("15", "48");
    	g.addEdge("48", "17");g.addEdge("17", "48");
    	g.addEdge("48", "18");g.addEdge("18", "48");
    	g.addEdge("48", "19");g.addEdge("19", "48");
    	g.addEdge("48", "20");g.addEdge("20", "48");
    	g.addEdge("48", "21");g.addEdge("21", "48");
    	g.addEdge("48", "22");g.addEdge("22", "48");
    	g.addEdge("48", "23");g.addEdge("23", "48");
    	g.addEdge("48", "24");g.addEdge("24", "48");
    	g.addEdge("48", "25");g.addEdge("25", "48");
    	g.addEdge("48", "26");g.addEdge("26", "48");
    	g.addEdge("48", "27");g.addEdge("27", "48");
    	g.addEdge("48", "28");g.addEdge("28", "48");
    	g.addEdge("48", "29");g.addEdge("29", "48");
    	g.addEdge("48", "30");g.addEdge("30", "48");
    	g.addEdge("48", "31");g.addEdge("31", "48");
    	g.addEdge("48", "32");g.addEdge("32", "48");
    	g.addEdge("48", "33");g.addEdge("33", "48");
    	g.addEdge("48", "34");g.addEdge("34", "48");
    	g.addEdge("48", "35");g.addEdge("35", "48");
    	g.addEdge("48", "36");g.addEdge("36", "48");
    	g.addEdge("48", "37");g.addEdge("37", "48");
    	g.addEdge("48", "38");g.addEdge("38", "48");
    	g.addEdge("48", "39");g.addEdge("39", "48");
    	g.addEdge("48", "41");g.addEdge("41", "48");
    	g.addEdge("48", "42");g.addEdge("42", "48");
    	g.addEdge("48", "43");g.addEdge("43", "48");
    	g.addEdge("48", "45");g.addEdge("45", "48");
    	g.addEdge("49", "1");g.addEdge("1", "49");
    	g.addEdge("49", "2");g.addEdge("2", "49");
    	g.addEdge("49", "3");g.addEdge("3", "49");
    	g.addEdge("49", "4");g.addEdge("4", "49");
    	g.addEdge("49", "5");g.addEdge("5", "49");
    	g.addEdge("49", "6");g.addEdge("6", "49");
    	g.addEdge("49", "7");g.addEdge("7", "49");
    	g.addEdge("49", "8");g.addEdge("8", "49");
    	g.addEdge("49", "9");g.addEdge("9", "49");
    	g.addEdge("49", "10");g.addEdge("10", "49");
    	g.addEdge("49", "11");g.addEdge("11", "49");
    	g.addEdge("49", "12");g.addEdge("12", "49");
    	g.addEdge("49", "13");g.addEdge("13", "49");
    	g.addEdge("49", "14");g.addEdge("14", "49");
    	g.addEdge("49", "15");g.addEdge("15", "49");
    	g.addEdge("49", "16");g.addEdge("16", "49");
    	g.addEdge("49", "18");g.addEdge("18", "49");
    	g.addEdge("49", "19");g.addEdge("19", "49");
    	g.addEdge("49", "20");g.addEdge("20", "49");
    	g.addEdge("49", "21");g.addEdge("21", "49");
    	g.addEdge("49", "22");g.addEdge("22", "49");
    	g.addEdge("49", "23");g.addEdge("23", "49");
    	g.addEdge("49", "24");g.addEdge("24", "49");
    	g.addEdge("49", "25");g.addEdge("25", "49");
    	g.addEdge("49", "26");g.addEdge("26", "49");
    	g.addEdge("49", "27");g.addEdge("27", "49");
    	g.addEdge("49", "28");g.addEdge("28", "49");
    	g.addEdge("49", "29");g.addEdge("29", "49");
    	g.addEdge("49", "30");g.addEdge("30", "49");
    	g.addEdge("49", "31");g.addEdge("31", "49");
    	g.addEdge("49", "32");g.addEdge("32", "49");
    	g.addEdge("49", "34");g.addEdge("34", "49");
    	g.addEdge("49", "35");g.addEdge("35", "49");
    	g.addEdge("49", "36");g.addEdge("36", "49");
    	g.addEdge("49", "37");g.addEdge("37", "49");
    	g.addEdge("49", "38");g.addEdge("38", "49");
    	g.addEdge("49", "39");g.addEdge("39", "49");
    	g.addEdge("49", "40");g.addEdge("40", "49");
    	g.addEdge("49", "41");g.addEdge("41", "49");
    	g.addEdge("49", "42");g.addEdge("42", "49");
    	g.addEdge("49", "43");g.addEdge("43", "49");
    	g.addEdge("49", "44");g.addEdge("44", "49");
    	g.addEdge("49", "45");g.addEdge("45", "49");
    	g.addEdge("49", "46");g.addEdge("46", "49");
    	g.addEdge("49", "47");g.addEdge("47", "49");
    	g.addEdge("49", "48");g.addEdge("48", "49");
    	g.addEdge("50", "1");g.addEdge("1", "50");
    	g.addEdge("50", "2");g.addEdge("2", "50");
    	g.addEdge("50", "3");g.addEdge("3", "50");
    	g.addEdge("50", "4");g.addEdge("4", "50");
    	g.addEdge("50", "5");g.addEdge("5", "50");
    	g.addEdge("50", "6");g.addEdge("6", "50");
    	g.addEdge("50", "7");g.addEdge("7", "50");
    	g.addEdge("50", "8");g.addEdge("8", "50");
    	g.addEdge("50", "9");g.addEdge("9", "50");
    	g.addEdge("50", "10");g.addEdge("10", "50");
    	g.addEdge("50", "11");g.addEdge("11", "50");
    	g.addEdge("50", "12");g.addEdge("12", "50");
    	g.addEdge("50", "13");g.addEdge("13", "50");
    	g.addEdge("50", "14");g.addEdge("14", "50");
    	g.addEdge("50", "15");g.addEdge("15", "50");
    	g.addEdge("50", "16");g.addEdge("16", "50");
    	g.addEdge("50", "17");g.addEdge("17", "50");
    	g.addEdge("50", "19");g.addEdge("19", "50");
    	g.addEdge("50", "20");g.addEdge("20", "50");
    	g.addEdge("50", "21");g.addEdge("21", "50");
    	g.addEdge("50", "22");g.addEdge("22", "50");
    	g.addEdge("50", "23");g.addEdge("23", "50");
    	g.addEdge("50", "24");g.addEdge("24", "50");
    	g.addEdge("50", "25");g.addEdge("25", "50");
    	g.addEdge("50", "26");g.addEdge("26", "50");
    	g.addEdge("50", "27");g.addEdge("27", "50");
    	g.addEdge("50", "28");g.addEdge("28", "50");
    	g.addEdge("50", "29");g.addEdge("29", "50");
    	g.addEdge("50", "30");g.addEdge("30", "50");
    	g.addEdge("50", "31");g.addEdge("31", "50");
    	g.addEdge("50", "32");g.addEdge("32", "50");
    	g.addEdge("50", "33");g.addEdge("33", "50");
    	g.addEdge("50", "35");g.addEdge("35", "50");
    	g.addEdge("50", "36");g.addEdge("36", "50");
    	g.addEdge("50", "37");g.addEdge("37", "50");
    	g.addEdge("50", "38");g.addEdge("38", "50");
    	g.addEdge("50", "39");g.addEdge("39", "50");
    	g.addEdge("50", "40");g.addEdge("40", "50");
    	g.addEdge("50", "41");g.addEdge("41", "50");
    	g.addEdge("50", "42");g.addEdge("42", "50");
    	g.addEdge("50", "43");g.addEdge("43", "50");
    	g.addEdge("50", "44");g.addEdge("44", "50");
    	g.addEdge("50", "45");g.addEdge("45", "50");
    	g.addEdge("50", "46");g.addEdge("46", "50");
    	g.addEdge("50", "47");g.addEdge("47", "50");
    	g.addEdge("50", "48");g.addEdge("48", "50");
    	g.addEdge("51", "1");g.addEdge("1", "51");
    	g.addEdge("51", "2");g.addEdge("2", "51");
    	g.addEdge("51", "3");g.addEdge("3", "51");
    	g.addEdge("51", "4");g.addEdge("4", "51");
    	g.addEdge("51", "5");g.addEdge("5", "51");
    	g.addEdge("51", "6");g.addEdge("6", "51");
    	g.addEdge("51", "7");g.addEdge("7", "51");
    	g.addEdge("51", "8");g.addEdge("8", "51");
    	g.addEdge("51", "9");g.addEdge("9", "51");
    	g.addEdge("51", "10");g.addEdge("10", "51");
    	g.addEdge("51", "11");g.addEdge("11", "51");
    	g.addEdge("51", "12");g.addEdge("12", "51");
    	g.addEdge("51", "13");g.addEdge("13", "51");
    	g.addEdge("51", "14");g.addEdge("14", "51");
    	g.addEdge("51", "15");g.addEdge("15", "51");
    	g.addEdge("51", "16");g.addEdge("16", "51");
    	g.addEdge("51", "17");g.addEdge("17", "51");
    	g.addEdge("51", "18");g.addEdge("18", "51");
    	g.addEdge("51", "20");g.addEdge("20", "51");
    	g.addEdge("51", "21");g.addEdge("21", "51");
    	g.addEdge("51", "22");g.addEdge("22", "51");
    	g.addEdge("51", "23");g.addEdge("23", "51");
    	g.addEdge("51", "24");g.addEdge("24", "51");
    	g.addEdge("51", "25");g.addEdge("25", "51");
    	g.addEdge("51", "26");g.addEdge("26", "51");
    	g.addEdge("51", "27");g.addEdge("27", "51");
    	g.addEdge("51", "28");g.addEdge("28", "51");
    	g.addEdge("51", "29");g.addEdge("29", "51");
    	g.addEdge("51", "30");g.addEdge("30", "51");
    	g.addEdge("51", "31");g.addEdge("31", "51");
    	g.addEdge("51", "32");g.addEdge("32", "51");
    	g.addEdge("51", "33");g.addEdge("33", "51");
    	g.addEdge("51", "34");g.addEdge("34", "51");
    	g.addEdge("51", "36");g.addEdge("36", "51");
    	g.addEdge("51", "37");g.addEdge("37", "51");
    	g.addEdge("51", "38");g.addEdge("38", "51");
    	g.addEdge("51", "39");g.addEdge("39", "51");
    	g.addEdge("51", "40");g.addEdge("40", "51");
    	g.addEdge("51", "41");g.addEdge("41", "51");
    	g.addEdge("51", "42");g.addEdge("42", "51");
    	g.addEdge("51", "43");g.addEdge("43", "51");
    	g.addEdge("51", "44");g.addEdge("44", "51");
    	g.addEdge("51", "45");g.addEdge("45", "51");
    	g.addEdge("51", "46");g.addEdge("46", "51");
    	g.addEdge("51", "47");g.addEdge("47", "51");
    	g.addEdge("51", "48");g.addEdge("48", "51");
    	g.addEdge("51", "50");g.addEdge("50", "51");
    	g.addEdge("52", "1");g.addEdge("1", "52");
    	g.addEdge("52", "2");g.addEdge("2", "52");
    	g.addEdge("52", "3");g.addEdge("3", "52");
    	g.addEdge("52", "4");g.addEdge("4", "52");
    	g.addEdge("52", "5");g.addEdge("5", "52");
    	g.addEdge("52", "6");g.addEdge("6", "52");
    	g.addEdge("52", "7");g.addEdge("7", "52");
    	g.addEdge("52", "8");g.addEdge("8", "52");
    	g.addEdge("52", "9");g.addEdge("9", "52");
    	g.addEdge("52", "10");g.addEdge("10", "52");
    	g.addEdge("52", "11");g.addEdge("11", "52");
    	g.addEdge("52", "12");g.addEdge("12", "52");
    	g.addEdge("52", "13");g.addEdge("13", "52");
    	g.addEdge("52", "14");g.addEdge("14", "52");
    	g.addEdge("52", "15");g.addEdge("15", "52");
    	g.addEdge("52", "16");g.addEdge("16", "52");
    	g.addEdge("52", "17");g.addEdge("17", "52");
    	g.addEdge("52", "18");g.addEdge("18", "52");
    	g.addEdge("52", "19");g.addEdge("19", "52");
    	g.addEdge("52", "21");g.addEdge("21", "52");
    	g.addEdge("52", "22");g.addEdge("22", "52");
    	g.addEdge("52", "23");g.addEdge("23", "52");
    	g.addEdge("52", "24");g.addEdge("24", "52");
    	g.addEdge("52", "25");g.addEdge("25", "52");
    	g.addEdge("52", "26");g.addEdge("26", "52");
    	g.addEdge("52", "27");g.addEdge("27", "52");
    	g.addEdge("52", "28");g.addEdge("28", "52");
    	g.addEdge("52", "29");g.addEdge("29", "52");
    	g.addEdge("52", "30");g.addEdge("30", "52");
    	g.addEdge("52", "31");g.addEdge("31", "52");
    	g.addEdge("52", "32");g.addEdge("32", "52");
    	g.addEdge("52", "33");g.addEdge("33", "52");
    	g.addEdge("52", "34");g.addEdge("34", "52");
    	g.addEdge("52", "35");g.addEdge("35", "52");
    	g.addEdge("52", "37");g.addEdge("37", "52");
    	g.addEdge("52", "38");g.addEdge("38", "52");
    	g.addEdge("52", "39");g.addEdge("39", "52");
    	g.addEdge("52", "40");g.addEdge("40", "52");
    	g.addEdge("52", "41");g.addEdge("41", "52");
    	g.addEdge("52", "42");g.addEdge("42", "52");
    	g.addEdge("52", "43");g.addEdge("43", "52");
    	g.addEdge("52", "44");g.addEdge("44", "52");
    	g.addEdge("52", "45");g.addEdge("45", "52");
    	g.addEdge("52", "46");g.addEdge("46", "52");
    	g.addEdge("52", "47");g.addEdge("47", "52");
    	g.addEdge("52", "48");g.addEdge("48", "52");
    	g.addEdge("52", "49");g.addEdge("49", "52");
    	g.addEdge("53", "1");g.addEdge("1", "53");
    	g.addEdge("53", "2");g.addEdge("2", "53");
    	g.addEdge("53", "3");g.addEdge("3", "53");
    	g.addEdge("53", "4");g.addEdge("4", "53");
    	g.addEdge("53", "5");g.addEdge("5", "53");
    	g.addEdge("53", "6");g.addEdge("6", "53");
    	g.addEdge("53", "7");g.addEdge("7", "53");
    	g.addEdge("53", "8");g.addEdge("8", "53");
    	g.addEdge("53", "9");g.addEdge("9", "53");
    	g.addEdge("53", "10");g.addEdge("10", "53");
    	g.addEdge("53", "11");g.addEdge("11", "53");
    	g.addEdge("53", "12");g.addEdge("12", "53");
    	g.addEdge("53", "13");g.addEdge("13", "53");
    	g.addEdge("53", "14");g.addEdge("14", "53");
    	g.addEdge("53", "15");g.addEdge("15", "53");
    	g.addEdge("53", "16");g.addEdge("16", "53");
    	g.addEdge("53", "17");g.addEdge("17", "53");
    	g.addEdge("53", "18");g.addEdge("18", "53");
    	g.addEdge("53", "19");g.addEdge("19", "53");
    	g.addEdge("53", "20");g.addEdge("20", "53");
    	g.addEdge("53", "22");g.addEdge("22", "53");
    	g.addEdge("53", "23");g.addEdge("23", "53");
    	g.addEdge("53", "24");g.addEdge("24", "53");
    	g.addEdge("53", "25");g.addEdge("25", "53");
    	g.addEdge("53", "26");g.addEdge("26", "53");
    	g.addEdge("53", "27");g.addEdge("27", "53");
    	g.addEdge("53", "28");g.addEdge("28", "53");
    	g.addEdge("53", "29");g.addEdge("29", "53");
    	g.addEdge("53", "30");g.addEdge("30", "53");
    	g.addEdge("53", "31");g.addEdge("31", "53");
    	g.addEdge("53", "32");g.addEdge("32", "53");
    	g.addEdge("53", "33");g.addEdge("33", "53");
    	g.addEdge("53", "34");g.addEdge("34", "53");
    	g.addEdge("53", "35");g.addEdge("35", "53");
    	g.addEdge("53", "36");g.addEdge("36", "53");
    	g.addEdge("53", "38");g.addEdge("38", "53");
    	g.addEdge("53", "39");g.addEdge("39", "53");
    	g.addEdge("53", "40");g.addEdge("40", "53");
    	g.addEdge("53", "41");g.addEdge("41", "53");
    	g.addEdge("53", "42");g.addEdge("42", "53");
    	g.addEdge("53", "43");g.addEdge("43", "53");
    	g.addEdge("53", "44");g.addEdge("44", "53");
    	g.addEdge("53", "45");g.addEdge("45", "53");
    	g.addEdge("53", "46");g.addEdge("46", "53");
    	g.addEdge("53", "47");g.addEdge("47", "53");
    	g.addEdge("53", "48");g.addEdge("48", "53");
    	g.addEdge("53", "50");g.addEdge("50", "53");
    	g.addEdge("53", "51");g.addEdge("51", "53");
    	g.addEdge("53", "52");g.addEdge("52", "53");
    	g.addEdge("54", "1");g.addEdge("1", "54");
    	g.addEdge("54", "2");g.addEdge("2", "54");
    	g.addEdge("54", "3");g.addEdge("3", "54");
    	g.addEdge("54", "4");g.addEdge("4", "54");
    	g.addEdge("54", "5");g.addEdge("5", "54");
    	g.addEdge("54", "6");g.addEdge("6", "54");
    	g.addEdge("54", "7");g.addEdge("7", "54");
    	g.addEdge("54", "8");g.addEdge("8", "54");
    	g.addEdge("54", "9");g.addEdge("9", "54");
    	g.addEdge("54", "10");g.addEdge("10", "54");
    	g.addEdge("54", "11");g.addEdge("11", "54");
    	g.addEdge("54", "12");g.addEdge("12", "54");
    	g.addEdge("54", "13");g.addEdge("13", "54");
    	g.addEdge("54", "14");g.addEdge("14", "54");
    	g.addEdge("54", "15");g.addEdge("15", "54");
    	g.addEdge("54", "16");g.addEdge("16", "54");
    	g.addEdge("54", "17");g.addEdge("17", "54");
    	g.addEdge("54", "18");g.addEdge("18", "54");
    	g.addEdge("54", "19");g.addEdge("19", "54");
    	g.addEdge("54", "20");g.addEdge("20", "54");
    	g.addEdge("54", "21");g.addEdge("21", "54");
    	g.addEdge("54", "23");g.addEdge("23", "54");
    	g.addEdge("54", "24");g.addEdge("24", "54");
    	g.addEdge("54", "25");g.addEdge("25", "54");
    	g.addEdge("54", "26");g.addEdge("26", "54");
    	g.addEdge("54", "27");g.addEdge("27", "54");
    	g.addEdge("54", "28");g.addEdge("28", "54");
    	g.addEdge("54", "29");g.addEdge("29", "54");
    	g.addEdge("54", "30");g.addEdge("30", "54");
    	g.addEdge("54", "31");g.addEdge("31", "54");
    	g.addEdge("54", "32");g.addEdge("32", "54");
    	g.addEdge("54", "33");g.addEdge("33", "54");
    	g.addEdge("54", "34");g.addEdge("34", "54");
    	g.addEdge("54", "35");g.addEdge("35", "54");
    	g.addEdge("54", "36");g.addEdge("36", "54");
    	g.addEdge("54", "37");g.addEdge("37", "54");
    	g.addEdge("54", "39");g.addEdge("39", "54");
    	g.addEdge("54", "40");g.addEdge("40", "54");
    	g.addEdge("54", "41");g.addEdge("41", "54");
    	g.addEdge("54", "42");g.addEdge("42", "54");
    	g.addEdge("54", "43");g.addEdge("43", "54");
    	g.addEdge("54", "44");g.addEdge("44", "54");
    	g.addEdge("54", "45");g.addEdge("45", "54");
    	g.addEdge("54", "46");g.addEdge("46", "54");
    	g.addEdge("54", "47");g.addEdge("47", "54");
    	g.addEdge("54", "48");g.addEdge("48", "54");
    	g.addEdge("54", "49");g.addEdge("49", "54");
    	g.addEdge("54", "51");g.addEdge("51", "54");
    	g.addEdge("54", "52");g.addEdge("52", "54");
    	g.addEdge("55", "1");g.addEdge("1", "55");
    	g.addEdge("55", "2");g.addEdge("2", "55");
    	g.addEdge("55", "3");g.addEdge("3", "55");
    	g.addEdge("55", "4");g.addEdge("4", "55");
    	g.addEdge("55", "5");g.addEdge("5", "55");
    	g.addEdge("55", "6");g.addEdge("6", "55");
    	g.addEdge("55", "7");g.addEdge("7", "55");
    	g.addEdge("55", "8");g.addEdge("8", "55");
    	g.addEdge("55", "9");g.addEdge("9", "55");
    	g.addEdge("55", "10");g.addEdge("10", "55");
    	g.addEdge("55", "11");g.addEdge("11", "55");
    	g.addEdge("55", "12");g.addEdge("12", "55");
    	g.addEdge("55", "13");g.addEdge("13", "55");
    	g.addEdge("55", "14");g.addEdge("14", "55");
    	g.addEdge("55", "15");g.addEdge("15", "55");
    	g.addEdge("55", "16");g.addEdge("16", "55");
    	g.addEdge("55", "17");g.addEdge("17", "55");
    	g.addEdge("55", "18");g.addEdge("18", "55");
    	g.addEdge("55", "19");g.addEdge("19", "55");
    	g.addEdge("55", "20");g.addEdge("20", "55");
    	g.addEdge("55", "21");g.addEdge("21", "55");
    	g.addEdge("55", "22");g.addEdge("22", "55");
    	g.addEdge("55", "24");g.addEdge("24", "55");
    	g.addEdge("55", "25");g.addEdge("25", "55");
    	g.addEdge("55", "26");g.addEdge("26", "55");
    	g.addEdge("55", "27");g.addEdge("27", "55");
    	g.addEdge("55", "28");g.addEdge("28", "55");
    	g.addEdge("55", "29");g.addEdge("29", "55");
    	g.addEdge("55", "30");g.addEdge("30", "55");
    	g.addEdge("55", "31");g.addEdge("31", "55");
    	g.addEdge("55", "32");g.addEdge("32", "55");
    	g.addEdge("55", "33");g.addEdge("33", "55");
    	g.addEdge("55", "34");g.addEdge("34", "55");
    	g.addEdge("55", "35");g.addEdge("35", "55");
    	g.addEdge("55", "36");g.addEdge("36", "55");
    	g.addEdge("55", "37");g.addEdge("37", "55");
    	g.addEdge("55", "38");g.addEdge("38", "55");
    	g.addEdge("55", "40");g.addEdge("40", "55");
    	g.addEdge("55", "41");g.addEdge("41", "55");
    	g.addEdge("55", "42");g.addEdge("42", "55");
    	g.addEdge("55", "43");g.addEdge("43", "55");
    	g.addEdge("55", "44");g.addEdge("44", "55");
    	g.addEdge("55", "45");g.addEdge("45", "55");
    	g.addEdge("55", "46");g.addEdge("46", "55");
    	g.addEdge("55", "47");g.addEdge("47", "55");
    	g.addEdge("55", "48");g.addEdge("48", "55");
    	g.addEdge("55", "49");g.addEdge("49", "55");
    	g.addEdge("55", "50");g.addEdge("50", "55");
    	g.addEdge("55", "52");g.addEdge("52", "55");
    	g.addEdge("55", "54");g.addEdge("54", "55");
    	g.addEdge("56", "1");g.addEdge("1", "56");
    	g.addEdge("56", "2");g.addEdge("2", "56");
    	g.addEdge("56", "3");g.addEdge("3", "56");
    	g.addEdge("56", "4");g.addEdge("4", "56");
    	g.addEdge("56", "5");g.addEdge("5", "56");
    	g.addEdge("56", "6");g.addEdge("6", "56");
    	g.addEdge("56", "7");g.addEdge("7", "56");
    	g.addEdge("56", "8");g.addEdge("8", "56");
    	g.addEdge("56", "9");g.addEdge("9", "56");
    	g.addEdge("56", "10");g.addEdge("10", "56");
    	g.addEdge("56", "11");g.addEdge("11", "56");
    	g.addEdge("56", "12");g.addEdge("12", "56");
    	g.addEdge("56", "13");g.addEdge("13", "56");
    	g.addEdge("56", "14");g.addEdge("14", "56");
    	g.addEdge("56", "15");g.addEdge("15", "56");
    	g.addEdge("56", "16");g.addEdge("16", "56");
    	g.addEdge("56", "17");g.addEdge("17", "56");
    	g.addEdge("56", "18");g.addEdge("18", "56");
    	g.addEdge("56", "19");g.addEdge("19", "56");
    	g.addEdge("56", "20");g.addEdge("20", "56");
    	g.addEdge("56", "21");g.addEdge("21", "56");
    	g.addEdge("56", "22");g.addEdge("22", "56");
    	g.addEdge("56", "23");g.addEdge("23", "56");
    	g.addEdge("56", "25");g.addEdge("25", "56");
    	g.addEdge("56", "26");g.addEdge("26", "56");
    	g.addEdge("56", "27");g.addEdge("27", "56");
    	g.addEdge("56", "28");g.addEdge("28", "56");
    	g.addEdge("56", "29");g.addEdge("29", "56");
    	g.addEdge("56", "30");g.addEdge("30", "56");
    	g.addEdge("56", "31");g.addEdge("31", "56");
    	g.addEdge("56", "32");g.addEdge("32", "56");
    	g.addEdge("56", "33");g.addEdge("33", "56");
    	g.addEdge("56", "34");g.addEdge("34", "56");
    	g.addEdge("56", "35");g.addEdge("35", "56");
    	g.addEdge("56", "36");g.addEdge("36", "56");
    	g.addEdge("56", "37");g.addEdge("37", "56");
    	g.addEdge("56", "38");g.addEdge("38", "56");
    	g.addEdge("56", "39");g.addEdge("39", "56");
    	g.addEdge("56", "41");g.addEdge("41", "56");
    	g.addEdge("56", "42");g.addEdge("42", "56");
    	g.addEdge("56", "43");g.addEdge("43", "56");
    	g.addEdge("56", "44");g.addEdge("44", "56");
    	g.addEdge("56", "45");g.addEdge("45", "56");
    	g.addEdge("56", "46");g.addEdge("46", "56");
    	g.addEdge("56", "47");g.addEdge("47", "56");
    	g.addEdge("56", "48");g.addEdge("48", "56");
    	g.addEdge("56", "49");g.addEdge("49", "56");
    	g.addEdge("56", "50");g.addEdge("50", "56");
    	g.addEdge("56", "51");g.addEdge("51", "56");
    	g.addEdge("56", "53");g.addEdge("53", "56");
    	g.addEdge("57", "1");g.addEdge("1", "57");
    	g.addEdge("57", "2");g.addEdge("2", "57");
    	g.addEdge("57", "3");g.addEdge("3", "57");
    	g.addEdge("57", "4");g.addEdge("4", "57");
    	g.addEdge("57", "5");g.addEdge("5", "57");
    	g.addEdge("57", "6");g.addEdge("6", "57");
    	g.addEdge("57", "7");g.addEdge("7", "57");
    	g.addEdge("57", "8");g.addEdge("8", "57");
    	g.addEdge("57", "9");g.addEdge("9", "57");
    	g.addEdge("57", "10");g.addEdge("10", "57");
    	g.addEdge("57", "11");g.addEdge("11", "57");
    	g.addEdge("57", "12");g.addEdge("12", "57");
    	g.addEdge("57", "13");g.addEdge("13", "57");
    	g.addEdge("57", "14");g.addEdge("14", "57");
    	g.addEdge("57", "15");g.addEdge("15", "57");
    	g.addEdge("57", "16");g.addEdge("16", "57");
    	g.addEdge("57", "17");g.addEdge("17", "57");
    	g.addEdge("57", "18");g.addEdge("18", "57");
    	g.addEdge("57", "19");g.addEdge("19", "57");
    	g.addEdge("57", "20");g.addEdge("20", "57");
    	g.addEdge("57", "21");g.addEdge("21", "57");
    	g.addEdge("57", "22");g.addEdge("22", "57");
    	g.addEdge("57", "23");g.addEdge("23", "57");
    	g.addEdge("57", "24");g.addEdge("24", "57");
    	g.addEdge("57", "26");g.addEdge("26", "57");
    	g.addEdge("57", "27");g.addEdge("27", "57");
    	g.addEdge("57", "28");g.addEdge("28", "57");
    	g.addEdge("57", "29");g.addEdge("29", "57");
    	g.addEdge("57", "30");g.addEdge("30", "57");
    	g.addEdge("57", "31");g.addEdge("31", "57");
    	g.addEdge("57", "32");g.addEdge("32", "57");
    	g.addEdge("57", "33");g.addEdge("33", "57");
    	g.addEdge("57", "34");g.addEdge("34", "57");
    	g.addEdge("57", "35");g.addEdge("35", "57");
    	g.addEdge("57", "36");g.addEdge("36", "57");
    	g.addEdge("57", "37");g.addEdge("37", "57");
    	g.addEdge("57", "38");g.addEdge("38", "57");
    	g.addEdge("57", "39");g.addEdge("39", "57");
    	g.addEdge("57", "40");g.addEdge("40", "57");
    	g.addEdge("57", "42");g.addEdge("42", "57");
    	g.addEdge("57", "43");g.addEdge("43", "57");
    	g.addEdge("57", "44");g.addEdge("44", "57");
    	g.addEdge("57", "45");g.addEdge("45", "57");
    	g.addEdge("57", "46");g.addEdge("46", "57");
    	g.addEdge("57", "47");g.addEdge("47", "57");
    	g.addEdge("57", "48");g.addEdge("48", "57");
    	g.addEdge("57", "50");g.addEdge("50", "57");
    	g.addEdge("57", "51");g.addEdge("51", "57");
    	g.addEdge("57", "52");g.addEdge("52", "57");
    	g.addEdge("57", "53");g.addEdge("53", "57");
    	g.addEdge("57", "54");g.addEdge("54", "57");
    	g.addEdge("57", "55");g.addEdge("55", "57");
    	g.addEdge("57", "56");g.addEdge("56", "57");
    	g.addEdge("58", "1");g.addEdge("1", "58");
    	g.addEdge("58", "2");g.addEdge("2", "58");
    	g.addEdge("58", "3");g.addEdge("3", "58");
    	g.addEdge("58", "4");g.addEdge("4", "58");
    	g.addEdge("58", "5");g.addEdge("5", "58");
    	g.addEdge("58", "6");g.addEdge("6", "58");
    	g.addEdge("58", "7");g.addEdge("7", "58");
    	g.addEdge("58", "8");g.addEdge("8", "58");
    	g.addEdge("58", "9");g.addEdge("9", "58");
    	g.addEdge("58", "10");g.addEdge("10", "58");
    	g.addEdge("58", "11");g.addEdge("11", "58");
    	g.addEdge("58", "12");g.addEdge("12", "58");
    	g.addEdge("58", "13");g.addEdge("13", "58");
    	g.addEdge("58", "14");g.addEdge("14", "58");
    	g.addEdge("58", "15");g.addEdge("15", "58");
    	g.addEdge("58", "16");g.addEdge("16", "58");
    	g.addEdge("58", "17");g.addEdge("17", "58");
    	g.addEdge("58", "18");g.addEdge("18", "58");
    	g.addEdge("58", "19");g.addEdge("19", "58");
    	g.addEdge("58", "20");g.addEdge("20", "58");
    	g.addEdge("58", "21");g.addEdge("21", "58");
    	g.addEdge("58", "22");g.addEdge("22", "58");
    	g.addEdge("58", "23");g.addEdge("23", "58");
    	g.addEdge("58", "24");g.addEdge("24", "58");
    	g.addEdge("58", "25");g.addEdge("25", "58");
    	g.addEdge("58", "27");g.addEdge("27", "58");
    	g.addEdge("58", "28");g.addEdge("28", "58");
    	g.addEdge("58", "29");g.addEdge("29", "58");
    	g.addEdge("58", "30");g.addEdge("30", "58");
    	g.addEdge("58", "31");g.addEdge("31", "58");
    	g.addEdge("58", "32");g.addEdge("32", "58");
    	g.addEdge("58", "33");g.addEdge("33", "58");
    	g.addEdge("58", "34");g.addEdge("34", "58");
    	g.addEdge("58", "35");g.addEdge("35", "58");
    	g.addEdge("58", "36");g.addEdge("36", "58");
    	g.addEdge("58", "37");g.addEdge("37", "58");
    	g.addEdge("58", "38");g.addEdge("38", "58");
    	g.addEdge("58", "39");g.addEdge("39", "58");
    	g.addEdge("58", "40");g.addEdge("40", "58");
    	g.addEdge("58", "41");g.addEdge("41", "58");
    	g.addEdge("58", "43");g.addEdge("43", "58");
    	g.addEdge("58", "44");g.addEdge("44", "58");
    	g.addEdge("58", "45");g.addEdge("45", "58");
    	g.addEdge("58", "46");g.addEdge("46", "58");
    	g.addEdge("58", "47");g.addEdge("47", "58");
    	g.addEdge("58", "48");g.addEdge("48", "58");
    	g.addEdge("58", "49");g.addEdge("49", "58");
    	g.addEdge("58", "51");g.addEdge("51", "58");
    	g.addEdge("58", "52");g.addEdge("52", "58");
    	g.addEdge("58", "53");g.addEdge("53", "58");
    	g.addEdge("58", "54");g.addEdge("54", "58");
    	g.addEdge("58", "55");g.addEdge("55", "58");
    	g.addEdge("58", "56");g.addEdge("56", "58");
    	g.addEdge("59", "1");g.addEdge("1", "59");
    	g.addEdge("59", "2");g.addEdge("2", "59");
    	g.addEdge("59", "3");g.addEdge("3", "59");
    	g.addEdge("59", "4");g.addEdge("4", "59");
    	g.addEdge("59", "5");g.addEdge("5", "59");
    	g.addEdge("59", "6");g.addEdge("6", "59");
    	g.addEdge("59", "7");g.addEdge("7", "59");
    	g.addEdge("59", "8");g.addEdge("8", "59");
    	g.addEdge("59", "9");g.addEdge("9", "59");
    	g.addEdge("59", "10");g.addEdge("10", "59");
    	g.addEdge("59", "11");g.addEdge("11", "59");
    	g.addEdge("59", "12");g.addEdge("12", "59");
    	g.addEdge("59", "13");g.addEdge("13", "59");
    	g.addEdge("59", "14");g.addEdge("14", "59");
    	g.addEdge("59", "15");g.addEdge("15", "59");
    	g.addEdge("59", "16");g.addEdge("16", "59");
    	g.addEdge("59", "17");g.addEdge("17", "59");
    	g.addEdge("59", "18");g.addEdge("18", "59");
    	g.addEdge("59", "19");g.addEdge("19", "59");
    	g.addEdge("59", "20");g.addEdge("20", "59");
    	g.addEdge("59", "21");g.addEdge("21", "59");
    	g.addEdge("59", "22");g.addEdge("22", "59");
    	g.addEdge("59", "23");g.addEdge("23", "59");
    	g.addEdge("59", "24");g.addEdge("24", "59");
    	g.addEdge("59", "25");g.addEdge("25", "59");
    	g.addEdge("59", "26");g.addEdge("26", "59");
    	g.addEdge("59", "28");g.addEdge("28", "59");
    	g.addEdge("59", "29");g.addEdge("29", "59");
    	g.addEdge("59", "30");g.addEdge("30", "59");
    	g.addEdge("59", "31");g.addEdge("31", "59");
    	g.addEdge("59", "32");g.addEdge("32", "59");
    	g.addEdge("59", "33");g.addEdge("33", "59");
    	g.addEdge("59", "34");g.addEdge("34", "59");
    	g.addEdge("59", "35");g.addEdge("35", "59");
    	g.addEdge("59", "36");g.addEdge("36", "59");
    	g.addEdge("59", "37");g.addEdge("37", "59");
    	g.addEdge("59", "38");g.addEdge("38", "59");
    	g.addEdge("59", "39");g.addEdge("39", "59");
    	g.addEdge("59", "40");g.addEdge("40", "59");
    	g.addEdge("59", "41");g.addEdge("41", "59");
    	g.addEdge("59", "42");g.addEdge("42", "59");
    	g.addEdge("59", "44");g.addEdge("44", "59");
    	g.addEdge("59", "45");g.addEdge("45", "59");
    	g.addEdge("59", "46");g.addEdge("46", "59");
    	g.addEdge("59", "47");g.addEdge("47", "59");
    	g.addEdge("59", "48");g.addEdge("48", "59");
    	g.addEdge("59", "49");g.addEdge("49", "59");
    	g.addEdge("59", "50");g.addEdge("50", "59");
    	g.addEdge("59", "52");g.addEdge("52", "59");
    	g.addEdge("59", "53");g.addEdge("53", "59");
    	g.addEdge("59", "54");g.addEdge("54", "59");
    	g.addEdge("59", "55");g.addEdge("55", "59");
    	g.addEdge("59", "56");g.addEdge("56", "59");
    	g.addEdge("59", "58");g.addEdge("58", "59");
    	g.addEdge("60", "1");g.addEdge("1", "60");
    	g.addEdge("60", "2");g.addEdge("2", "60");
    	g.addEdge("60", "3");g.addEdge("3", "60");
    	g.addEdge("60", "4");g.addEdge("4", "60");
    	g.addEdge("60", "5");g.addEdge("5", "60");
    	g.addEdge("60", "6");g.addEdge("6", "60");
    	g.addEdge("60", "7");g.addEdge("7", "60");
    	g.addEdge("60", "8");g.addEdge("8", "60");
    	g.addEdge("60", "9");g.addEdge("9", "60");
    	g.addEdge("60", "10");g.addEdge("10", "60");
    	g.addEdge("60", "11");g.addEdge("11", "60");
    	g.addEdge("60", "12");g.addEdge("12", "60");
    	g.addEdge("60", "13");g.addEdge("13", "60");
    	g.addEdge("60", "14");g.addEdge("14", "60");
    	g.addEdge("60", "15");g.addEdge("15", "60");
    	g.addEdge("60", "16");g.addEdge("16", "60");
    	g.addEdge("60", "17");g.addEdge("17", "60");
    	g.addEdge("60", "18");g.addEdge("18", "60");
    	g.addEdge("60", "19");g.addEdge("19", "60");
    	g.addEdge("60", "20");g.addEdge("20", "60");
    	g.addEdge("60", "21");g.addEdge("21", "60");
    	g.addEdge("60", "22");g.addEdge("22", "60");
    	g.addEdge("60", "23");g.addEdge("23", "60");
    	g.addEdge("60", "24");g.addEdge("24", "60");
    	g.addEdge("60", "25");g.addEdge("25", "60");
    	g.addEdge("60", "26");g.addEdge("26", "60");
    	g.addEdge("60", "27");g.addEdge("27", "60");
    	g.addEdge("60", "29");g.addEdge("29", "60");
    	g.addEdge("60", "30");g.addEdge("30", "60");
    	g.addEdge("60", "31");g.addEdge("31", "60");
    	g.addEdge("60", "32");g.addEdge("32", "60");
    	g.addEdge("60", "33");g.addEdge("33", "60");
    	g.addEdge("60", "34");g.addEdge("34", "60");
    	g.addEdge("60", "35");g.addEdge("35", "60");
    	g.addEdge("60", "36");g.addEdge("36", "60");
    	g.addEdge("60", "37");g.addEdge("37", "60");
    	g.addEdge("60", "38");g.addEdge("38", "60");
    	g.addEdge("60", "39");g.addEdge("39", "60");
    	g.addEdge("60", "40");g.addEdge("40", "60");
    	g.addEdge("60", "41");g.addEdge("41", "60");
    	g.addEdge("60", "42");g.addEdge("42", "60");
    	g.addEdge("60", "43");g.addEdge("43", "60");
    	g.addEdge("60", "45");g.addEdge("45", "60");
    	g.addEdge("60", "46");g.addEdge("46", "60");
    	g.addEdge("60", "47");g.addEdge("47", "60");
    	g.addEdge("60", "48");g.addEdge("48", "60");
    	g.addEdge("60", "49");g.addEdge("49", "60");
    	g.addEdge("60", "50");g.addEdge("50", "60");
    	g.addEdge("60", "51");g.addEdge("51", "60");
    	g.addEdge("60", "53");g.addEdge("53", "60");
    	g.addEdge("60", "54");g.addEdge("54", "60");
    	g.addEdge("60", "55");g.addEdge("55", "60");
    	g.addEdge("60", "56");g.addEdge("56", "60");
    	g.addEdge("60", "57");g.addEdge("57", "60");
    	g.addEdge("61", "1");g.addEdge("1", "61");
    	g.addEdge("61", "2");g.addEdge("2", "61");
    	g.addEdge("61", "3");g.addEdge("3", "61");
    	g.addEdge("61", "4");g.addEdge("4", "61");
    	g.addEdge("61", "5");g.addEdge("5", "61");
    	g.addEdge("61", "6");g.addEdge("6", "61");
    	g.addEdge("61", "7");g.addEdge("7", "61");
    	g.addEdge("61", "8");g.addEdge("8", "61");
    	g.addEdge("61", "9");g.addEdge("9", "61");
    	g.addEdge("61", "10");g.addEdge("10", "61");
    	g.addEdge("61", "11");g.addEdge("11", "61");
    	g.addEdge("61", "12");g.addEdge("12", "61");
    	g.addEdge("61", "13");g.addEdge("13", "61");
    	g.addEdge("61", "14");g.addEdge("14", "61");
    	g.addEdge("61", "15");g.addEdge("15", "61");
    	g.addEdge("61", "16");g.addEdge("16", "61");
    	g.addEdge("61", "17");g.addEdge("17", "61");
    	g.addEdge("61", "18");g.addEdge("18", "61");
    	g.addEdge("61", "19");g.addEdge("19", "61");
    	g.addEdge("61", "20");g.addEdge("20", "61");
    	g.addEdge("61", "21");g.addEdge("21", "61");
    	g.addEdge("61", "22");g.addEdge("22", "61");
    	g.addEdge("61", "23");g.addEdge("23", "61");
    	g.addEdge("61", "24");g.addEdge("24", "61");
    	g.addEdge("61", "25");g.addEdge("25", "61");
    	g.addEdge("61", "26");g.addEdge("26", "61");
    	g.addEdge("61", "27");g.addEdge("27", "61");
    	g.addEdge("61", "28");g.addEdge("28", "61");
    	g.addEdge("61", "30");g.addEdge("30", "61");
    	g.addEdge("61", "31");g.addEdge("31", "61");
    	g.addEdge("61", "32");g.addEdge("32", "61");
    	g.addEdge("61", "33");g.addEdge("33", "61");
    	g.addEdge("61", "34");g.addEdge("34", "61");
    	g.addEdge("61", "35");g.addEdge("35", "61");
    	g.addEdge("61", "36");g.addEdge("36", "61");
    	g.addEdge("61", "37");g.addEdge("37", "61");
    	g.addEdge("61", "38");g.addEdge("38", "61");
    	g.addEdge("61", "39");g.addEdge("39", "61");
    	g.addEdge("61", "40");g.addEdge("40", "61");
    	g.addEdge("61", "41");g.addEdge("41", "61");
    	g.addEdge("61", "42");g.addEdge("42", "61");
    	g.addEdge("61", "43");g.addEdge("43", "61");
    	g.addEdge("61", "44");g.addEdge("44", "61");
    	g.addEdge("61", "46");g.addEdge("46", "61");
    	g.addEdge("61", "47");g.addEdge("47", "61");
    	g.addEdge("61", "48");g.addEdge("48", "61");
    	g.addEdge("61", "49");g.addEdge("49", "61");
    	g.addEdge("61", "50");g.addEdge("50", "61");
    	g.addEdge("61", "51");g.addEdge("51", "61");
    	g.addEdge("61", "52");g.addEdge("52", "61");
    	g.addEdge("61", "54");g.addEdge("54", "61");
    	g.addEdge("61", "55");g.addEdge("55", "61");
    	g.addEdge("61", "56");g.addEdge("56", "61");
    	g.addEdge("61", "58");g.addEdge("58", "61");
    	g.addEdge("61", "59");g.addEdge("59", "61");
    	g.addEdge("61", "60");g.addEdge("60", "61");
    	g.addEdge("62", "1");g.addEdge("1", "62");
    	g.addEdge("62", "2");g.addEdge("2", "62");
    	g.addEdge("62", "3");g.addEdge("3", "62");
    	g.addEdge("62", "4");g.addEdge("4", "62");
    	g.addEdge("62", "5");g.addEdge("5", "62");
    	g.addEdge("62", "6");g.addEdge("6", "62");
    	g.addEdge("62", "7");g.addEdge("7", "62");
    	g.addEdge("62", "8");g.addEdge("8", "62");
    	g.addEdge("62", "9");g.addEdge("9", "62");
    	g.addEdge("62", "10");g.addEdge("10", "62");
    	g.addEdge("62", "11");g.addEdge("11", "62");
    	g.addEdge("62", "12");g.addEdge("12", "62");
    	g.addEdge("62", "13");g.addEdge("13", "62");
    	g.addEdge("62", "14");g.addEdge("14", "62");
    	g.addEdge("62", "15");g.addEdge("15", "62");
    	g.addEdge("62", "16");g.addEdge("16", "62");
    	g.addEdge("62", "17");g.addEdge("17", "62");
    	g.addEdge("62", "18");g.addEdge("18", "62");
    	g.addEdge("62", "19");g.addEdge("19", "62");
    	g.addEdge("62", "20");g.addEdge("20", "62");
    	g.addEdge("62", "21");g.addEdge("21", "62");
    	g.addEdge("62", "22");g.addEdge("22", "62");
    	g.addEdge("62", "23");g.addEdge("23", "62");
    	g.addEdge("62", "24");g.addEdge("24", "62");
    	g.addEdge("62", "25");g.addEdge("25", "62");
    	g.addEdge("62", "26");g.addEdge("26", "62");
    	g.addEdge("62", "27");g.addEdge("27", "62");
    	g.addEdge("62", "28");g.addEdge("28", "62");
    	g.addEdge("62", "29");g.addEdge("29", "62");
    	g.addEdge("62", "31");g.addEdge("31", "62");
    	g.addEdge("62", "32");g.addEdge("32", "62");
    	g.addEdge("62", "33");g.addEdge("33", "62");
    	g.addEdge("62", "34");g.addEdge("34", "62");
    	g.addEdge("62", "35");g.addEdge("35", "62");
    	g.addEdge("62", "36");g.addEdge("36", "62");
    	g.addEdge("62", "37");g.addEdge("37", "62");
    	g.addEdge("62", "38");g.addEdge("38", "62");
    	g.addEdge("62", "39");g.addEdge("39", "62");
    	g.addEdge("62", "40");g.addEdge("40", "62");
    	g.addEdge("62", "41");g.addEdge("41", "62");
    	g.addEdge("62", "42");g.addEdge("42", "62");
    	g.addEdge("62", "43");g.addEdge("43", "62");
    	g.addEdge("62", "44");g.addEdge("44", "62");
    	g.addEdge("62", "45");g.addEdge("45", "62");
    	g.addEdge("62", "47");g.addEdge("47", "62");
    	g.addEdge("62", "48");g.addEdge("48", "62");
    	g.addEdge("62", "49");g.addEdge("49", "62");
    	g.addEdge("62", "50");g.addEdge("50", "62");
    	g.addEdge("62", "51");g.addEdge("51", "62");
    	g.addEdge("62", "52");g.addEdge("52", "62");
    	g.addEdge("62", "53");g.addEdge("53", "62");
    	g.addEdge("62", "55");g.addEdge("55", "62");
    	g.addEdge("62", "56");g.addEdge("56", "62");
    	g.addEdge("62", "57");g.addEdge("57", "62");
    	g.addEdge("62", "59");g.addEdge("59", "62");
    	g.addEdge("62", "60");g.addEdge("60", "62");
    	g.addEdge("63", "1");g.addEdge("1", "63");
    	g.addEdge("63", "2");g.addEdge("2", "63");
    	g.addEdge("63", "3");g.addEdge("3", "63");
    	g.addEdge("63", "4");g.addEdge("4", "63");
    	g.addEdge("63", "5");g.addEdge("5", "63");
    	g.addEdge("63", "6");g.addEdge("6", "63");
    	g.addEdge("63", "7");g.addEdge("7", "63");
    	g.addEdge("63", "8");g.addEdge("8", "63");
    	g.addEdge("63", "9");g.addEdge("9", "63");
    	g.addEdge("63", "10");g.addEdge("10", "63");
    	g.addEdge("63", "11");g.addEdge("11", "63");
    	g.addEdge("63", "12");g.addEdge("12", "63");
    	g.addEdge("63", "13");g.addEdge("13", "63");
    	g.addEdge("63", "14");g.addEdge("14", "63");
    	g.addEdge("63", "15");g.addEdge("15", "63");
    	g.addEdge("63", "16");g.addEdge("16", "63");
    	g.addEdge("63", "17");g.addEdge("17", "63");
    	g.addEdge("63", "18");g.addEdge("18", "63");
    	g.addEdge("63", "19");g.addEdge("19", "63");
    	g.addEdge("63", "20");g.addEdge("20", "63");
    	g.addEdge("63", "21");g.addEdge("21", "63");
    	g.addEdge("63", "22");g.addEdge("22", "63");
    	g.addEdge("63", "23");g.addEdge("23", "63");
    	g.addEdge("63", "24");g.addEdge("24", "63");
    	g.addEdge("63", "25");g.addEdge("25", "63");
    	g.addEdge("63", "26");g.addEdge("26", "63");
    	g.addEdge("63", "27");g.addEdge("27", "63");
    	g.addEdge("63", "28");g.addEdge("28", "63");
    	g.addEdge("63", "29");g.addEdge("29", "63");
    	g.addEdge("63", "30");g.addEdge("30", "63");
    	g.addEdge("63", "32");g.addEdge("32", "63");
    	g.addEdge("63", "33");g.addEdge("33", "63");
    	g.addEdge("63", "34");g.addEdge("34", "63");
    	g.addEdge("63", "35");g.addEdge("35", "63");
    	g.addEdge("63", "36");g.addEdge("36", "63");
    	g.addEdge("63", "37");g.addEdge("37", "63");
    	g.addEdge("63", "38");g.addEdge("38", "63");
    	g.addEdge("63", "39");g.addEdge("39", "63");
    	g.addEdge("63", "40");g.addEdge("40", "63");
    	g.addEdge("63", "41");g.addEdge("41", "63");
    	g.addEdge("63", "42");g.addEdge("42", "63");
    	g.addEdge("63", "43");g.addEdge("43", "63");
    	g.addEdge("63", "44");g.addEdge("44", "63");
    	g.addEdge("63", "45");g.addEdge("45", "63");
    	g.addEdge("63", "46");g.addEdge("46", "63");
    	g.addEdge("63", "48");g.addEdge("48", "63");
    	g.addEdge("63", "49");g.addEdge("49", "63");
    	g.addEdge("63", "50");g.addEdge("50", "63");
    	g.addEdge("63", "51");g.addEdge("51", "63");
    	g.addEdge("63", "52");g.addEdge("52", "63");
    	g.addEdge("63", "53");g.addEdge("53", "63");
    	g.addEdge("63", "54");g.addEdge("54", "63");
    	g.addEdge("63", "56");g.addEdge("56", "63");
    	g.addEdge("63", "57");g.addEdge("57", "63");
    	g.addEdge("63", "58");g.addEdge("58", "63");
    	g.addEdge("63", "60");g.addEdge("60", "63");
    	g.addEdge("63", "62");g.addEdge("62", "63");
    	g.addEdge("64", "1");g.addEdge("1", "64");
    	g.addEdge("64", "2");g.addEdge("2", "64");
    	g.addEdge("64", "3");g.addEdge("3", "64");
    	g.addEdge("64", "4");g.addEdge("4", "64");
    	g.addEdge("64", "5");g.addEdge("5", "64");
    	g.addEdge("64", "6");g.addEdge("6", "64");
    	g.addEdge("64", "7");g.addEdge("7", "64");
    	g.addEdge("64", "8");g.addEdge("8", "64");
    	g.addEdge("64", "9");g.addEdge("9", "64");
    	g.addEdge("64", "10");g.addEdge("10", "64");
    	g.addEdge("64", "11");g.addEdge("11", "64");
    	g.addEdge("64", "12");g.addEdge("12", "64");
    	g.addEdge("64", "13");g.addEdge("13", "64");
    	g.addEdge("64", "14");g.addEdge("14", "64");
    	g.addEdge("64", "15");g.addEdge("15", "64");
    	g.addEdge("64", "16");g.addEdge("16", "64");
    	g.addEdge("64", "17");g.addEdge("17", "64");
    	g.addEdge("64", "18");g.addEdge("18", "64");
    	g.addEdge("64", "19");g.addEdge("19", "64");
    	g.addEdge("64", "20");g.addEdge("20", "64");
    	g.addEdge("64", "21");g.addEdge("21", "64");
    	g.addEdge("64", "22");g.addEdge("22", "64");
    	g.addEdge("64", "23");g.addEdge("23", "64");
    	g.addEdge("64", "24");g.addEdge("24", "64");
    	g.addEdge("64", "25");g.addEdge("25", "64");
    	g.addEdge("64", "26");g.addEdge("26", "64");
    	g.addEdge("64", "27");g.addEdge("27", "64");
    	g.addEdge("64", "28");g.addEdge("28", "64");
    	g.addEdge("64", "29");g.addEdge("29", "64");
    	g.addEdge("64", "30");g.addEdge("30", "64");
    	g.addEdge("64", "31");g.addEdge("31", "64");
    	g.addEdge("64", "33");g.addEdge("33", "64");
    	g.addEdge("64", "34");g.addEdge("34", "64");
    	g.addEdge("64", "35");g.addEdge("35", "64");
    	g.addEdge("64", "36");g.addEdge("36", "64");
    	g.addEdge("64", "37");g.addEdge("37", "64");
    	g.addEdge("64", "38");g.addEdge("38", "64");
    	g.addEdge("64", "39");g.addEdge("39", "64");
    	g.addEdge("64", "40");g.addEdge("40", "64");
    	g.addEdge("64", "41");g.addEdge("41", "64");
    	g.addEdge("64", "42");g.addEdge("42", "64");
    	g.addEdge("64", "43");g.addEdge("43", "64");
    	g.addEdge("64", "44");g.addEdge("44", "64");
    	g.addEdge("64", "45");g.addEdge("45", "64");
    	g.addEdge("64", "46");g.addEdge("46", "64");
    	g.addEdge("64", "47");g.addEdge("47", "64");
    	g.addEdge("64", "49");g.addEdge("49", "64");
    	g.addEdge("64", "50");g.addEdge("50", "64");
    	g.addEdge("64", "51");g.addEdge("51", "64");
    	g.addEdge("64", "52");g.addEdge("52", "64");
    	g.addEdge("64", "53");g.addEdge("53", "64");
    	g.addEdge("64", "54");g.addEdge("54", "64");
    	g.addEdge("64", "55");g.addEdge("55", "64");
    	g.addEdge("64", "57");g.addEdge("57", "64");
    	g.addEdge("64", "58");g.addEdge("58", "64");
    	g.addEdge("64", "59");g.addEdge("59", "64");
    	g.addEdge("64", "61");g.addEdge("61", "64");
    	return g;
    }
    
    /**
     * Create a toy graph based on String objects.
     *
     * @return a graph based on String objects.
     */
    private static DirectedGraph<String, DefaultEdge> createStringGraph1(){
    	DirectedGraph<String, DefaultEdge> g = new DefaultDirectedGraph<>(DefaultEdge.class);

    	g.addVertex("1");
    	g.addVertex("2");
    	g.addVertex("3");
    	g.addVertex("4");
    	g.addVertex("5");
    	g.addVertex("7");
    	g.addVertex("8");
    	g.addVertex("9");
    	g.addEdge("3", "2");g.addEdge("2", "3");
    	g.addEdge("4", "1");g.addEdge("1", "4");
    	g.addEdge("5", "2");g.addEdge("2", "5");
    	g.addEdge("5", "3");g.addEdge("3", "5");
    	g.addEdge("5", "4");g.addEdge("4", "5");
    	g.addEdge("7", "1");g.addEdge("1", "7");
    	g.addEdge("7", "2");g.addEdge("2", "7");
    	g.addEdge("7", "4");g.addEdge("4", "7");
    	g.addEdge("8", "1");g.addEdge("1", "8");
    	g.addEdge("8", "2");g.addEdge("2", "8");
    	g.addEdge("8", "3");g.addEdge("3", "8");
    	g.addEdge("8", "5");g.addEdge("5", "8");
    	g.addEdge("9", "2");g.addEdge("2", "9");
    	g.addEdge("9", "3");g.addEdge("3", "9");
    	g.addEdge("9", "4");g.addEdge("4", "9");
    	g.addEdge("9", "5");g.addEdge("5", "9");
    	g.addEdge("9", "7");g.addEdge("7", "9");
    	g.addEdge("9", "8");g.addEdge("8", "9");
    	
    	/*Collection<String> vtx = new HashSet<>(g.vertexSet());
    	for(String s:vtx){
    		if(g.degreeOf(s)==3)
    			g.removeVertex(s);
    	}
    	System.out.println(g.vertexSet());//*/
    	
    	return g;
    }

}
